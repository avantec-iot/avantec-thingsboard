{
  "title": "TA652FH-W Thermostat List",
  "image": null,
  "mobileHide": true,
  "mobileOrder": null,
  "configuration": {
    "description": "TA652FH-W Thermostat List",
    "widgets": {
      "69b8f8cb-cfe2-4b54-d435-1cd0f550358d": {
        "isSystemType": true,
        "bundleAlias": "cards",
        "typeAlias": "entities_table",
        "type": "latest",
        "title": "New widget",
        "image": null,
        "description": null,
        "sizeX": 7.5,
        "sizeY": 6.5,
        "config": {
          "timewindow": {
            "displayValue": "",
            "selectedTab": 0,
            "realtime": {
              "realtimeType": 1,
              "interval": 1000,
              "timewindowMs": 60000,
              "quickInterval": "CURRENT_DAY"
            },
            "history": {
              "historyType": 0,
              "interval": 1000,
              "timewindowMs": 60000,
              "fixedTimewindow": {
                "startTimeMs": 1680082358034,
                "endTimeMs": 1680168758034
              },
              "quickInterval": "CURRENT_DAY"
            },
            "aggregation": {
              "type": "NONE",
              "limit": 200
            }
          },
          "showTitle": true,
          "backgroundColor": "rgb(255, 255, 255)",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "4px",
          "settings": {
            "entitiesTitle": "TA652FH-W Thermostats (v.1.0)",
            "enableSearch": true,
            "enableSelectColumnDisplay": true,
            "enableStickyHeader": true,
            "enableStickyAction": true,
            "reserveSpaceForHiddenAction": "true",
            "displayEntityName": true,
            "displayEntityLabel": true,
            "displayEntityType": false,
            "displayPagination": true,
            "defaultPageSize": 10,
            "defaultSortOrder": "entityName",
            "useRowStyleFunction": false,
            "entityNameColumnTitle": "Device name",
            "entityLabelColumnTitle": "Label"
          },
          "title": "New Entities table",
          "dropShadow": true,
          "enableFullscreen": true,
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400,
            "padding": "5px 10px 5px 10px"
          },
          "useDashboardTimewindow": false,
          "showLegend": false,
          "datasources": [
            {
              "type": "entity",
              "name": null,
              "entityAliasId": "ddeebca7-32f9-d8aa-d1e6-ec59a26631db",
              "filterId": null,
              "dataKeys": [
                {
                  "name": "type",
                  "type": "entityField",
                  "label": "Type",
                  "color": "#e91e63",
                  "settings": {},
                  "_hash": 0.2975901043633382
                },
                {
                  "name": "active",
                  "type": "attribute",
                  "label": "active",
                  "color": "#8bc34a",
                  "settings": {},
                  "_hash": 0.9836070312446519
                },
                {
                  "name": "roomTemp",
                  "type": "timeseries",
                  "label": "Room Temp",
                  "color": "#4caf50",
                  "settings": {},
                  "_hash": 0.9594098739434804,
                  "aggregationType": "NONE",
                  "units": null,
                  "decimals": null,
                  "funcBody": null,
                  "usePostProcessing": null,
                  "postFuncBody": null
                },
                {
                  "name": "floorTemp",
                  "type": "timeseries",
                  "label": "Floor Temp",
                  "color": "#ffc107",
                  "settings": {
                    "columnWidth": "0px",
                    "useCellStyleFunction": false,
                    "useCellContentFunction": false,
                    "defaultColumnVisibility": "visible",
                    "columnSelectionToDisplay": "enabled"
                  },
                  "_hash": 0.36221424662217094,
                  "aggregationType": "NONE",
                  "units": null,
                  "decimals": null,
                  "funcBody": null,
                  "usePostProcessing": null,
                  "postFuncBody": null
                },
                {
                  "name": "spValue",
                  "type": "attribute",
                  "label": "Setpoint",
                  "color": "#607d8b",
                  "settings": {
                    "columnWidth": "0px",
                    "useCellStyleFunction": false,
                    "useCellContentFunction": false,
                    "defaultColumnVisibility": "visible",
                    "columnSelectionToDisplay": "enabled"
                  },
                  "_hash": 0.6273381598191303,
                  "aggregationType": null,
                  "units": null,
                  "decimals": null,
                  "funcBody": null,
                  "usePostProcessing": null,
                  "postFuncBody": null
                },
                {
                  "name": "currentTempUnit",
                  "type": "attribute",
                  "label": "Unit",
                  "color": "#f44336",
                  "settings": {},
                  "_hash": 0.7860563692413678,
                  "aggregationType": null,
                  "units": null,
                  "decimals": null,
                  "funcBody": null,
                  "usePostProcessing": null,
                  "postFuncBody": null
                }
              ]
            }
          ],
          "displayTimewindow": true,
          "mobileHide": true,
          "actions": {
            "actionCellButton": [
              {
                "name": "Edit thermostat",
                "icon": "edit",
                "useShowWidgetActionFunction": null,
                "showWidgetActionFunction": "return true;",
                "type": "customPretty",
                "customHtml": "<form #editEntityForm=\"ngForm\" [formGroup]=\"editEntityFormGroup\"\n      (ngSubmit)=\"save()\"  class=\"edit-entity-form\">\n    <mat-toolbar fxLayout=\"row\" color=\"primary\">\n        <h2>Edit Thermostat - {{entityName}}</h2>\n        <span fxFlex></span>\n        <button mat-icon-button (click)=\"cancel()\" type=\"button\">\n            <mat-icon class=\"material-icons\">close</mat-icon>\n        </button>\n    </mat-toolbar>\n    <mat-progress-bar color=\"warn\" mode=\"indeterminate\" *ngIf=\"isLoading$ | async\">\n    </mat-progress-bar>\n    <div style=\"height: 4px;\" *ngIf=\"!(isLoading$ | async)\"></div>\n    <div mat-dialog-content fxLayout=\"column\">\n        <div fxLayout=\"row\" fxLayoutGap=\"8px\" fxLayout.xs=\"column\"  fxLayoutGap.xs=\"0\">\n<!--        <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Device Name</mat-label>\n                <input matInput formControlName=\"entityName\" required readonly=\"\">\n            </mat-form-field>-->\n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Device Label</mat-label>\n                <input matInput formControlName=\"entityLabel\" >\n            </mat-form-field>\n        </div>\n<!--    <div formGroupName=\"attributes\" fxLayout=\"column\">\n            <div fxLayout=\"row\" fxLayoutGap=\"8px\" fxLayout.xs=\"column\"  fxLayoutGap.xs=\"0\">\n                <mat-form-field fxFlex class=\"mat-block\">\n                    <mat-label>xPos</mat-label>\n                    <input type=\"number\" step=\"any\" matInput formControlName=\"xPos\">\n                </mat-form-field>\n                <mat-form-field fxFlex class=\"mat-block\">\n                    <mat-label>yPos</mat-label>\n                    <input type=\"number\" step=\"any\" matInput formControlName=\"yPos\">\n                </mat-form-field>\n            </div>\n        </div>\n        <tb-entity-autocomplete\n            *ngIf=isTenant\n            [entityType]='\"CUSTOMER\"'\n            formControlName=\"customerId\"\n        >\n        </tb-entity-autocomplete>-->\n    </div>\n    <div mat-dialog-actions fxLayout=\"row\" fxLayoutAlign=\"end center\">\n        <button mat-button color=\"primary\"\n                type=\"button\"\n                [disabled]=\"(isLoading$ | async)\"\n                (click)=\"cancel()\" cdkFocusInitial>\n            Cancel\n        </button>\n        <button mat-button mat-raised-button color=\"primary\"\n                type=\"submit\"\n                [disabled]=\"(isLoading$ | async) || editEntityForm.invalid || !editEntityForm.dirty\">\n            Save\n        </button>\n    </div>\n</form>",
                "customCss": "/*=======================================================================*/\n/*==========  There are two examples: for edit and add entity  ==========*/\n/*=======================================================================*/\n/*========================  Edit entity example  ========================*/\n/*=======================================================================*/\n/*\n.edit-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.edit-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .mat-form-field-infix {\n    width: auto !important;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n/*========================================================================*/\n/*=========================  Add entity example  =========================*/\n/*========================================================================*/\n/*\n.add-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.add-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .mat-form-field-infix {\n    width: auto !important;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n",
                "customFunction": "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\nlet entityService = $injector.get(widgetContext.servicesMap.get('entityService'));\nlet deviceService = $injector.get(widgetContext.servicesMap.get('deviceService'));\nlet attributeService = $injector.get(widgetContext.servicesMap.get('attributeService'));\n\nopenEditEntityDialog();\n\nfunction openEditEntityDialog() {\n    customDialog.customDialog(htmlTemplate, EditEntityDialogController).subscribe();\n}\n\nfunction EditEntityDialogController(instance) {\n    let vm = instance;\n    \n    const NULL_UUID = '13814000-1dd2-11b2-8080-808080808080';\n\n    vm.entityName = entityName;\n    //vm.attributes = {};\n    vm.entity = {};\n    vm.isTenant = widgetContext.currentUser.authority == 'TENANT_ADMIN';\n\n    vm.editEntityFormGroup = vm.fb.group({\n        //entityName: ['', [vm.validators.required]],\n        entityLabel: [null]/*,\n        attributes: vm.fb.group({\n            xPos: [null],\n            yPos: [null]\n        }),\n        customerId: [null]*/\n    });\n\n    getEntityInfo();\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    };\n\n    vm.save = function() {\n        widgetContext.rxjs.forkJoin([\n            saveAttributes(entityId),\n            saveEntity()\n        ]).subscribe(\n            function () {\n                widgetContext.updateAliases();\n                vm.dialogRef.close(null);\n            }\n        );\n    };\n\n    function getEntityAttributes(attributes) {\n        /*for (var i = 0; i < attributes.length; i++) {\n            vm.attributes[attributes[i].key] = attributes[i].value;\n        }*/\n    }\n\n    function getEntityInfo() {\n        widgetContext.rxjs.forkJoin([\n            attributeService.getEntityAttributes(entityId, 'SERVER_SCOPE'),\n            entityService.getEntity(entityId.entityType, entityId.id)\n        ]).subscribe(\n            function (data) {\n                getEntityAttributes(data[0]);\n                vm.entity = data[1];\n                vm.editEntityFormGroup.patchValue({\n                    //entityName: vm.entity.name,\n                    entityLabel: vm.entity.label/*,\n                    attributes: vm.attributes,\n                    customerId: vm.entity.customerId.id !== NULL_UUID ? vm.entity.customerId.id : null*/\n                }, {emitEvent: false});\n            }\n        );\n    }\n\n    function saveEntity() {\n        const formValues = vm.editEntityFormGroup.value;\n        \n        /*let customerId;\n        if (formValues.customerId === null) {\n            customerId = {\n                id: NULL_UUID,\n                entityType: \"CUSTOMER\"\n            };\n        } else {\n            customerId = {\n                id: formValues.customerId,\n                entityType: \"CUSTOMER\"\n            };\n        }*/\n        \n        if (vm.entity.label !== formValues.entityLabel /*||\n            vm.entity.customerId.id !== customerId.id*/){\n            vm.entity.label = formValues.entityLabel;\n            //vm.entity.customerId = customerId;\n            return deviceService.saveDevice(vm.entity);\n        }\n        return widgetContext.rxjs.of([]);\n    }\n\n    function saveAttributes(entityId) {\n        /*let attributes = vm.editEntityFormGroup.get('attributes').value;\n        let attributesArray = [];\n        for (let key in attributes) {\n            if (attributes[key] !== vm.attributes[key]) {\n                attributesArray.push({key: key, value: attributes[key]});\n            }\n        }\n        if (attributesArray.length > 0) {\n            return attributeService.saveEntityAttributes(entityId, \"SERVER_SCOPE\", attributesArray);\n        }*/\n        return widgetContext.rxjs.of([]);\n    }\n}\n",
                "customResources": [],
                "openInSeparateDialog": false,
                "openInPopover": false,
                "id": "50111976-7348-21bd-b53e-b1cb8257fc52"
              },
              {
                "name": "to_ta652fh-w_detail",
                "icon": "settings",
                "useShowWidgetActionFunction": null,
                "showWidgetActionFunction": "return true;",
                "type": "openDashboard",
                "targetDashboardStateId": "monitor",
                "setEntityId": true,
                "stateEntityParamName": null,
                "openNewBrowserTab": false,
                "targetDashboardId": "1e488fb0-ddbe-11ed-89ca-83198259cac0",
                "openInSeparateDialog": false,
                "openInPopover": false,
                "id": "22219139-2477-f35f-1fd2-b047cc0328ea"
              }
            ]
          }
        },
        "row": 0,
        "col": 0,
        "id": "69b8f8cb-cfe2-4b54-d435-1cd0f550358d"
      }
    },
    "states": {
      "default": {
        "name": "TA652FH-W Thermostat List",
        "root": true,
        "layouts": {
          "main": {
            "widgets": {
              "69b8f8cb-cfe2-4b54-d435-1cd0f550358d": {
                "sizeX": 23,
                "sizeY": 11,
                "mobileHide": true,
                "row": 0,
                "col": 0
              }
            },
            "gridSettings": {
              "backgroundColor": "#eeeeee",
              "columns": 24,
              "margin": 10,
              "backgroundSizeMode": "100%"
            }
          }
        }
      }
    },
    "entityAliases": {
      "ddeebca7-32f9-d8aa-d1e6-ec59a26631db": {
        "id": "ddeebca7-32f9-d8aa-d1e6-ec59a26631db",
        "alias": "TA652FH-W Thermostats",
        "filter": {
          "type": "deviceType",
          "resolveMultiple": true,
          "deviceType": "TA652FH-W Thermostat",
          "deviceNameFilter": ""
        }
      },
      "51860026-d4c7-309d-d658-ee05eb713072": {
        "id": "51860026-d4c7-309d-d658-ee05eb713072",
        "alias": "TA652FC-W Thermostats",
        "filter": {
          "type": "deviceType",
          "resolveMultiple": true,
          "deviceType": "TA652FC-W Thermostat",
          "deviceNameFilter": ""
        }
      }
    },
    "filters": {},
    "timewindow": {
      "displayValue": "",
      "hideInterval": false,
      "hideAggregation": false,
      "hideAggInterval": false,
      "hideTimezone": false,
      "selectedTab": 0,
      "realtime": {
        "realtimeType": 0,
        "interval": 1000,
        "timewindowMs": 60000,
        "quickInterval": "CURRENT_DAY"
      },
      "history": {
        "historyType": 0,
        "interval": 1000,
        "timewindowMs": 60000,
        "fixedTimewindow": {
          "startTimeMs": 1679994825731,
          "endTimeMs": 1680081225731
        },
        "quickInterval": "CURRENT_DAY"
      },
      "aggregation": {
        "type": "AVG",
        "limit": 25000
      }
    },
    "settings": {
      "stateControllerId": "entity",
      "showTitle": false,
      "showDashboardsSelect": true,
      "showEntitiesSelect": true,
      "showDashboardTimewindow": true,
      "showDashboardExport": true,
      "toolbarAlwaysOpen": true
    }
  },
  "name": "TA652FH-W Thermostat List"
}