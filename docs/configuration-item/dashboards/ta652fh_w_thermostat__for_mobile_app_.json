{
  "title": "TA652FH-W Thermostat (For Mobile App)",
  "image": null,
  "mobileHide": true,
  "mobileOrder": null,
  "configuration": {
    "description": "",
    "widgets": {
      "ac6a1422-a81a-4fee-a588-7b8e3feda150": {
        "type": "static",
        "sizeX": 7.5,
        "sizeY": 3,
        "config": {
          "datasources": [],
          "timewindow": {
            "realtime": {
              "timewindowMs": 60000
            }
          },
          "showTitle": false,
          "backgroundColor": "#eeeeee",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px 10px",
          "settings": {
            "cardHtml": "<div class='card'></div>",
            "cardCss": ".card {\n    font-weight: bold;\n    font-size: 32px;\n    color: #999;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}"
          },
          "title": "New HTML Card",
          "dropShadow": false,
          "enableFullscreen": false,
          "enableDataExport": true,
          "widgetStyle": {},
          "widgetCss": "",
          "pageSize": 1024,
          "noDataDisplayMessage": "",
          "showLegend": false
        },
        "row": 0,
        "col": 0,
        "id": "ac6a1422-a81a-4fee-a588-7b8e3feda150",
        "typeFullFqn": "system.cards.html_card"
      },
      "a3c73fe0-0b1b-2dc0-2716-53d8f3bd4bb6": {
        "type": "latest",
        "sizeX": 7.5,
        "sizeY": 3,
        "config": {
          "datasources": [
            {
              "type": "entity",
              "name": null,
              "entityAliasId": "6241956e-9e96-794d-24e2-3cac159dc3ca",
              "filterId": null,
              "dataKeys": [
                {
                  "name": "floorTemp",
                  "type": "timeseries",
                  "label": "floorTemp",
                  "color": "#4caf50",
                  "settings": {},
                  "_hash": 0.31252687522391964,
                  "units": null,
                  "decimals": null,
                  "funcBody": null,
                  "usePostProcessing": null,
                  "postFuncBody": null
                },
                {
                  "name": "currentTempUnit",
                  "type": "attribute",
                  "label": "currentTempUnit",
                  "color": "#4caf50",
                  "settings": {},
                  "_hash": 0.9299557253984947,
                  "units": null,
                  "decimals": null,
                  "funcBody": null,
                  "usePostProcessing": null,
                  "postFuncBody": null
                }
              ]
            }
          ],
          "timewindow": {
            "displayValue": "",
            "selectedTab": 0,
            "realtime": {
              "realtimeType": 1,
              "interval": 1000,
              "timewindowMs": 60000,
              "quickInterval": "CURRENT_DAY"
            },
            "history": {
              "historyType": 0,
              "interval": 1000,
              "timewindowMs": 60000,
              "fixedTimewindow": {
                "startTimeMs": 1681702405190,
                "endTimeMs": 1681788805190
              },
              "quickInterval": "CURRENT_DAY"
            },
            "aggregation": {
              "type": "AVG",
              "limit": 25000
            }
          },
          "showTitle": false,
          "backgroundColor": "#fff",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px",
          "settings": {
            "cardHtml": "<div class='card'>\n    <div class='content'> \n        <div class='description'>\n            Floor temperature\n        </div>\n        <div class='value'>\n            ${floorTemp:1}${currentTempUnit}\n        </div>\n    </div>\n</div>",
            "cardCss": ".card {\n   width: 100%;\n   height: 100%;\n   border: 0px solid #E0E0E0;\n   box-sizing: border-box;\n}\n\n.card .content {\n   padding: 22px 10px;\n   display: flex;\n   flex-direction: column;\n   justify-content: center;\n   height: 100%;\n   box-sizing: border-box;\n}\n\n.card .value {\n    font-size: 1.5em;\n    font-weight: bold;\n    line-height: 1.5;\n    color: #333333;\n    text-align: center;\n}\n\n.card .description {\n    font-size: 0.8em;\n    font-weight: normal;\n    line-height: 1.5;\n    color: #333333;\n    text-align: left;\n    opacity: 0.5;\n}\n\n@media (min-width: 960px) and (max-width: 1200px) {\n    .card .value {\n        font-size: 1.2em;\n        line-height: 1;\n    }\n    \n    .card .description {\n        font-size: 0.8em;\n        line-height: 1;\n    }\n}"
          },
          "title": "New HTML Value Card",
          "dropShadow": false,
          "enableFullscreen": false,
          "widgetStyle": {},
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "useDashboardTimewindow": true,
          "showLegend": false,
          "actions": {},
          "enableDataExport": false,
          "widgetCss": "",
          "pageSize": 1024,
          "decimals": 1,
          "noDataDisplayMessage": "",
          "mobileOrder": 10
        },
        "row": 0,
        "col": 0,
        "id": "a3c73fe0-0b1b-2dc0-2716-53d8f3bd4bb6",
        "typeFullFqn": "system.cards.html_value_card"
      },
      "e16ab7bf-954e-cda5-e675-2a3c93804472": {
        "type": "latest",
        "sizeX": 7.5,
        "sizeY": 3,
        "config": {
          "datasources": [
            {
              "type": "entity",
              "name": null,
              "entityAliasId": "6241956e-9e96-794d-24e2-3cac159dc3ca",
              "filterId": null,
              "dataKeys": [
                {
                  "name": "currentTempUnit",
                  "type": "attribute",
                  "label": "currentTempUnit",
                  "color": "#4caf50",
                  "settings": {},
                  "_hash": 0.9299557253984947,
                  "units": null,
                  "decimals": null,
                  "funcBody": null,
                  "usePostProcessing": null,
                  "postFuncBody": null
                },
                {
                  "name": "spValue",
                  "type": "attribute",
                  "label": "spValue",
                  "color": "#4caf50",
                  "settings": {},
                  "_hash": 0.0028942423165743136
                }
              ]
            }
          ],
          "timewindow": {
            "displayValue": "",
            "selectedTab": 0,
            "realtime": {
              "realtimeType": 1,
              "interval": 1000,
              "timewindowMs": 60000,
              "quickInterval": "CURRENT_DAY"
            },
            "history": {
              "historyType": 0,
              "interval": 1000,
              "timewindowMs": 60000,
              "fixedTimewindow": {
                "startTimeMs": 1681702405191,
                "endTimeMs": 1681788805191
              },
              "quickInterval": "CURRENT_DAY"
            },
            "aggregation": {
              "type": "AVG",
              "limit": 25000
            }
          },
          "showTitle": false,
          "backgroundColor": "#fff",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px",
          "settings": {
            "cardHtml": "<div class='card'>\n    <div class='content'> \n        <div class='description'>\n            Setpoint\n        </div>\n        <div class='value'>\n            ${spValue:1}${currentTempUnit}\n        </div>\n    </div>\n</div>",
            "cardCss": ".card {\n   width: 100%;\n   height: 100%;\n   border: 0px solid #E0E0E0;\n   box-sizing: border-box;\n}\n\n.card .content {\n   padding: 22px 10px;\n   display: flex;\n   flex-direction: column;\n   justify-content: center;\n   height: 100%;\n   box-sizing: border-box;\n}\n\n.card .value {\n    font-size: 1.5em;\n    font-weight: bold;\n    line-height: 1.5;\n    color: #333333;\n    text-align: center;\n}\n\n.card .description {\n    font-size: 0.8em;\n    font-weight: normal;\n    line-height: 1.5;\n    color: #333333;\n    text-align: left;\n    opacity: 0.5;\n}\n\n@media (min-width: 960px) and (max-width: 1200px) {\n    .card .value {\n        font-size: 1.2em;\n        line-height: 1;\n    }\n    \n    .card .description {\n        font-size: 0.8em;\n        line-height: 1;\n    }\n}"
          },
          "title": "New HTML Value Card",
          "dropShadow": false,
          "enableFullscreen": false,
          "widgetStyle": {},
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "useDashboardTimewindow": true,
          "showLegend": false,
          "actions": {},
          "enableDataExport": false,
          "widgetCss": "",
          "pageSize": 1024,
          "decimals": 1,
          "noDataDisplayMessage": "",
          "mobileOrder": 10
        },
        "row": 0,
        "col": 0,
        "id": "e16ab7bf-954e-cda5-e675-2a3c93804472",
        "typeFullFqn": "system.cards.html_value_card"
      },
      "1304b52c-4b5a-5e57-64a2-c0729e5af698": {
        "type": "timeseries",
        "sizeX": 8,
        "sizeY": 5,
        "config": {
          "datasources": [
            {
              "type": "entity",
              "name": null,
              "entityAliasId": "6241956e-9e96-794d-24e2-3cac159dc3ca",
              "filterId": null,
              "dataKeys": [
                {
                  "name": "roomTemp",
                  "type": "timeseries",
                  "label": "Room temperature",
                  "color": "#009b4d",
                  "settings": {
                    "excludeFromStacking": false,
                    "hideDataByDefault": false,
                    "disableDataHiding": false,
                    "removeFromLegend": false,
                    "showLines": true,
                    "fillLines": false,
                    "showPoints": false,
                    "showPointShape": "circle",
                    "pointShapeFormatter": "var size = radius * Math.sqrt(Math.PI) / 2;\nctx.moveTo(x - size, y - size);\nctx.lineTo(x + size, y + size);\nctx.moveTo(x - size, y + size);\nctx.lineTo(x + size, y - size);",
                    "showPointsLineWidth": 5,
                    "showPointsRadius": 3,
                    "showSeparateAxis": false,
                    "axisPosition": "left",
                    "thresholds": [
                      {
                        "thresholdValueSource": "predefinedValue"
                      }
                    ],
                    "comparisonSettings": {
                      "showValuesForComparison": true
                    }
                  },
                  "_hash": 0.7558212875420249,
                  "units": null,
                  "decimals": null,
                  "funcBody": null,
                  "usePostProcessing": null,
                  "postFuncBody": null,
                  "aggregationType": null
                },
                {
                  "name": "floorTemp",
                  "type": "timeseries",
                  "label": "Floor  temperature",
                  "color": "#2196f3",
                  "settings": {
                    "excludeFromStacking": false,
                    "hideDataByDefault": false,
                    "disableDataHiding": false,
                    "removeFromLegend": false,
                    "showLines": true,
                    "fillLines": false,
                    "showPoints": false,
                    "showPointShape": "circle",
                    "pointShapeFormatter": "var size = radius * Math.sqrt(Math.PI) / 2;\nctx.moveTo(x - size, y - size);\nctx.lineTo(x + size, y + size);\nctx.moveTo(x - size, y + size);\nctx.lineTo(x + size, y - size);",
                    "showPointsLineWidth": 5,
                    "showPointsRadius": 3,
                    "showSeparateAxis": false,
                    "axisPosition": "left",
                    "thresholds": [
                      {
                        "thresholdValueSource": "predefinedValue"
                      }
                    ],
                    "comparisonSettings": {
                      "showValuesForComparison": true
                    }
                  },
                  "_hash": 0.8323556652467088,
                  "units": null,
                  "decimals": null,
                  "funcBody": null,
                  "usePostProcessing": null,
                  "postFuncBody": null,
                  "aggregationType": null
                }
              ],
              "latestDataKeys": null
            }
          ],
          "timewindow": {
            "hideInterval": false,
            "hideAggregation": false,
            "hideAggInterval": false,
            "hideTimezone": false,
            "selectedTab": 0,
            "realtime": {
              "realtimeType": 0,
              "timewindowMs": 604800000,
              "quickInterval": "CURRENT_DAY",
              "interval": 7200000
            },
            "aggregation": {
              "type": "AVG",
              "limit": 25000
            }
          },
          "showTitle": true,
          "backgroundColor": "#fff",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px 10px",
          "settings": {
            "shadowSize": 4,
            "fontColor": "#545454",
            "fontSize": 10,
            "xaxis": {
              "showLabels": true,
              "color": "#545454"
            },
            "yaxis": {
              "showLabels": true,
              "color": "#545454",
              "tickSize": 0,
              "tickDecimals": 0,
              "min": 0
            },
            "grid": {
              "color": "#545454",
              "tickColor": "#DDDDDD",
              "verticalLines": true,
              "horizontalLines": true,
              "outlineWidth": 1
            },
            "stack": false,
            "tooltipIndividual": false,
            "smoothLines": true,
            "tooltipCumulative": false,
            "hideZeros": false,
            "showTooltip": true,
            "comparisonEnabled": false,
            "timeForComparison": "previousInterval",
            "xaxisSecond": {
              "axisPosition": "top",
              "showLabels": false
            },
            "customLegendEnabled": true,
            "showLegend": true,
            "legendConfig": {
              "direction": "column",
              "position": "bottom",
              "sortDataKeys": false,
              "showMin": false,
              "showMax": false,
              "showAvg": false,
              "showTotal": false
            }
          },
          "title": "Temperature history",
          "dropShadow": false,
          "enableFullscreen": true,
          "titleStyle": {
            "fontSize": "0.8em",
            "fontWeight": "normal",
            "opacity": 0.5
          },
          "mobileHeight": 4,
          "useDashboardTimewindow": false,
          "displayTimewindow": true,
          "showTitleIcon": false,
          "titleTooltip": "",
          "widgetStyle": {},
          "widgetCss": "",
          "noDataDisplayMessage": "",
          "mobileOrder": 14
        },
        "row": 0,
        "col": 0,
        "id": "1304b52c-4b5a-5e57-64a2-c0729e5af698",
        "typeFullFqn": "system.charts.basic_timeseries"
      },
      "3a6cf13a-39c1-074b-6588-31236eadf24b": {
        "type": "static",
        "sizeX": 7.5,
        "sizeY": 3,
        "config": {
          "datasources": [],
          "timewindow": {
            "realtime": {
              "timewindowMs": 60000
            }
          },
          "showTitle": false,
          "backgroundColor": "#eeeeee",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px 10px",
          "settings": {
            "cardHtml": "<div class='card'></div>",
            "cardCss": ".card {\n    font-weight: bold;\n    font-size: 32px;\n    color: #999;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}"
          },
          "title": "New HTML Card",
          "dropShadow": false,
          "enableFullscreen": false,
          "enableDataExport": true,
          "widgetStyle": {},
          "widgetCss": "",
          "pageSize": 1024,
          "noDataDisplayMessage": "",
          "showLegend": false
        },
        "row": 0,
        "col": 0,
        "id": "3a6cf13a-39c1-074b-6588-31236eadf24b",
        "typeFullFqn": "system.cards.html_card"
      },
      "01cf776d-c69f-a819-ff77-578f7be89090": {
        "type": "static",
        "sizeX": 7.5,
        "sizeY": 3,
        "config": {
          "datasources": [],
          "timewindow": {
            "realtime": {
              "timewindowMs": 60000
            }
          },
          "showTitle": false,
          "backgroundColor": "#eeeeee",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px 10px",
          "settings": {
            "cardHtml": "<div class='card'></div>",
            "cardCss": ".card {\n    font-weight: bold;\n    font-size: 32px;\n    color: #999;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}"
          },
          "title": "New HTML Card",
          "dropShadow": false,
          "enableFullscreen": false,
          "enableDataExport": true,
          "widgetStyle": {},
          "widgetCss": "",
          "pageSize": 1024,
          "noDataDisplayMessage": "",
          "showLegend": false
        },
        "row": 0,
        "col": 0,
        "id": "01cf776d-c69f-a819-ff77-578f7be89090",
        "typeFullFqn": "system.cards.html_card"
      },
      "c085c3c7-53cf-794e-6fc8-70733c389f58": {
        "type": "rpc",
        "sizeX": 3,
        "sizeY": 3,
        "config": {
          "showTitle": false,
          "backgroundColor": "#ffffff",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px 10px",
          "settings": {
            "retrieveAttributeKey": "spValue",
            "updateMethod": "rpc",
            "updateRPCMethod": "remoteSetSpValue",
            "convertValueFunction": "/* console.log(value); */\nreturn value;",
            "requestTimeout": 5001,
            "retrieveAttributeKeyOfMinValue": "spValueMin",
            "retrieveAttributeKeyOfMaxValue": "spValueMax",
            "retrieveAttributeKeyOfStepValue": "spValueStep",
            "retrieveAttributeKeyOfUnit": "currentTempUnit",
            "title": "Setpoint"
          },
          "title": "",
          "showTitleIcon": false,
          "titleIcon": null,
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "dropShadow": false,
          "enableFullscreen": false,
          "widgetStyle": {},
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "useDashboardTimewindow": true,
          "displayTimewindow": true,
          "showLegend": false,
          "actions": {},
          "targetDeviceAliases": [],
          "datasources": [],
          "decimals": 1,
          "targetDeviceAliasIds": [
            "6241956e-9e96-794d-24e2-3cac159dc3ca"
          ],
          "enableDataExport": true,
          "widgetCss": "",
          "pageSize": 1024,
          "noDataDisplayMessage": ""
        },
        "id": "c085c3c7-53cf-794e-6fc8-70733c389f58",
        "typeFullFqn": "tenant.avantec_widgets.select_double_value_from_flexiable_options"
      },
      "c13e1ad8-91b7-6860-9a7c-91bbbe98290e": {
        "type": "latest",
        "sizeX": 7.5,
        "sizeY": 3,
        "config": {
          "datasources": [
            {
              "type": "entity",
              "name": null,
              "entityAliasId": "6241956e-9e96-794d-24e2-3cac159dc3ca",
              "filterId": null,
              "dataKeys": [
                {
                  "name": "prgNextEnable",
                  "type": "attribute",
                  "label": "prgNextEnable",
                  "color": "#2196f3",
                  "settings": {},
                  "_hash": 0.5551765029037521,
                  "units": null,
                  "decimals": null,
                  "funcBody": null,
                  "usePostProcessing": true,
                  "postFuncBody": "return value ? \"On\" : \"Off\";"
                },
                {
                  "name": "prgNextDaysTime",
                  "type": "attribute",
                  "label": "prgNextDaysTime",
                  "color": "#4caf50",
                  "settings": {},
                  "_hash": 0.7919596637584614
                },
                {
                  "name": "prgNextSetpoint",
                  "type": "attribute",
                  "label": "prgNextSetpoint",
                  "color": "#f44336",
                  "settings": {},
                  "_hash": 0.07602886479310622
                },
                {
                  "name": "currentTempUnit",
                  "type": "attribute",
                  "label": "currentTempUnit",
                  "color": "#ffc107",
                  "settings": {},
                  "_hash": 0.04199464631222183,
                  "units": null,
                  "decimals": null,
                  "funcBody": null,
                  "usePostProcessing": null,
                  "postFuncBody": null
                }
              ]
            }
          ],
          "timewindow": {
            "displayValue": "",
            "selectedTab": 0,
            "realtime": {
              "realtimeType": 1,
              "interval": 1000,
              "timewindowMs": 60000,
              "quickInterval": "CURRENT_DAY"
            },
            "history": {
              "historyType": 0,
              "interval": 1000,
              "timewindowMs": 60000,
              "fixedTimewindow": {
                "startTimeMs": 1681702405191,
                "endTimeMs": 1681788805191
              },
              "quickInterval": "CURRENT_DAY"
            },
            "aggregation": {
              "type": "AVG",
              "limit": 25000
            }
          },
          "showTitle": false,
          "backgroundColor": "#fff",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px",
          "settings": {
            "cardHtml": "<div class='card'>\n    <div class='content'>\n        <table>\n            <tr>\n                <td width=\"40%\">\n                    <div class='description'>\n                        Program\n                    </div>\n                </td>\n                <td width=\"60%\">\n                    <div class='description'>\n                        Next setpoint\n                    </div>\n                </td>\n            </tr>\n            <tr>\n                <td width=\"40%\">\n                    <div class='value'>\n                        ${prgNextEnable}\n                    </div>\n                </td>\n                <td width=\"60%\">\n                    <div class='value'>\n                        ${prgNextDaysTime}  ${prgNextSetpoint:1}${currentTempUnit}\n                    </div>\n                </td>\n            </tr>\n        </table>\n    </div>\n</div>",
            "cardCss": ".card {\n   width: 100%;\n   height: 100%;\n   border: 0px solid #E0E0E0;\n   box-sizing: border-box;\n}\n\n.card .content {\n   padding: 22px 10px;\n   display: flex;\n   flex-direction: column;\n   justify-content: center;\n   height: 100%;\n   box-sizing: border-box;\n}\n\n.card .value {\n    font-size: 1.0em;\n    font-weight: bold;\n    line-height: 1.5;\n    color: #333333;\n    text-align: left;\n}\n\n.card .description {\n    font-size: 0.8em;\n    font-weight: normal;\n    line-height: 1.5;\n    color: #333333;\n    text-align: left;\n    opacity: 0.5;\n}\n\n@media (min-width: 960px) and (max-width: 1200px) {\n    .card .value {\n        font-size: 1.2em;\n        line-height: 1;\n    }\n    \n    .card .description {\n        font-size: 0.8em;\n        line-height: 1;\n    }\n}"
          },
          "title": "New HTML Value Card",
          "dropShadow": false,
          "enableFullscreen": false,
          "widgetStyle": {},
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "useDashboardTimewindow": true,
          "showLegend": false,
          "actions": {},
          "enableDataExport": false,
          "widgetCss": "",
          "pageSize": 1024,
          "decimals": 1,
          "noDataDisplayMessage": "",
          "mobileOrder": 10
        },
        "row": 0,
        "col": 0,
        "id": "c13e1ad8-91b7-6860-9a7c-91bbbe98290e",
        "typeFullFqn": "system.cards.html_value_card"
      },
      "976d0c06-2471-e8fd-e296-1b6cb00a945e": {
        "type": "rpc",
        "sizeX": 3,
        "sizeY": 2,
        "config": {
          "showTitle": false,
          "backgroundColor": "#ffffff",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px 10px",
          "settings": {
            "retrieveMethod": "attribute",
            "retrieveAttributeKey": "overrideStatus",
            "updateMethod": "rpc",
            "updateRPCMethod": "remoteSetOverrideStatus",
            "requestTimeout": 5000,
            "buttonState": {
              "on": {
                "value": "true",
                "label": "Yes",
                "isRaised": true,
                "isPrimary": true
              },
              "off": {
                "value": "false",
                "label": "No",
                "isRaised": true,
                "isPrimary": false,
                "bgColor": "#e6e7e8"
              }
            },
            "convertValueFunction": "return {};",
            "title": "Override program status"
          },
          "title": "",
          "showTitleIcon": false,
          "titleIcon": null,
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "dropShadow": false,
          "enableFullscreen": false,
          "widgetStyle": {},
          "titleStyle": {
            "fontSize": "14px",
            "fontWeight": 400
          },
          "useDashboardTimewindow": true,
          "displayTimewindow": true,
          "showLegend": false,
          "actions": {},
          "targetDeviceAliases": [],
          "datasources": [],
          "targetDeviceAliasIds": [
            "6241956e-9e96-794d-24e2-3cac159dc3ca"
          ],
          "enableDataExport": true,
          "widgetCss": "",
          "pageSize": 1024,
          "noDataDisplayMessage": ""
        },
        "id": "976d0c06-2471-e8fd-e296-1b6cb00a945e",
        "typeFullFqn": "tenant.avantec_widgets.styled_button_of_string_value"
      },
      "1eb0637f-df3e-3fa0-44fb-7b3c78797e98": {
        "type": "rpc",
        "sizeX": 3,
        "sizeY": 2,
        "config": {
          "showTitle": false,
          "backgroundColor": "#ffffff",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px 10px",
          "settings": {
            "retrieveMethod": "attribute",
            "retrieveAttributeKey": "controlMode",
            "updateMethod": "rpc",
            "updateRPCMethod": "remoteSetControlMode",
            "requestTimeout": 5000,
            "buttonState": {
              "on": {
                "label": "On",
                "isRaised": true,
                "isPrimary": true,
                "value": "On"
              },
              "off": {
                "value": "Off",
                "label": "Off",
                "isRaised": true,
                "isPrimary": false,
                "bgColor": "#e6e7e8"
              }
            },
            "title": "Control"
          },
          "title": "",
          "showTitleIcon": false,
          "titleIcon": null,
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "dropShadow": false,
          "enableFullscreen": false,
          "widgetStyle": {},
          "titleStyle": {
            "fontSize": "0.6em",
            "fontWeight": 400
          },
          "useDashboardTimewindow": true,
          "displayTimewindow": true,
          "showLegend": false,
          "actions": {},
          "targetDeviceAliases": [],
          "datasources": [],
          "targetDeviceAliasIds": [
            "6241956e-9e96-794d-24e2-3cac159dc3ca"
          ],
          "enableDataExport": true,
          "widgetCss": "",
          "pageSize": 1024,
          "noDataDisplayMessage": "",
          "margin": "0px"
        },
        "id": "1eb0637f-df3e-3fa0-44fb-7b3c78797e98",
        "typeFullFqn": "tenant.avantec_widgets.styled_button_of_string_value"
      },
      "23f882ee-4efd-ec19-7ca6-d777509c5216": {
        "type": "static",
        "sizeX": 7.5,
        "sizeY": 3,
        "config": {
          "datasources": [],
          "timewindow": {
            "realtime": {
              "timewindowMs": 60000
            }
          },
          "showTitle": false,
          "backgroundColor": "#eeeeee",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px 10px",
          "settings": {
            "cardHtml": "<div class='card'></div>",
            "cardCss": ".card {\n    font-weight: bold;\n    font-size: 32px;\n    color: #999;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}"
          },
          "title": "New HTML Card",
          "dropShadow": false,
          "enableFullscreen": false,
          "enableDataExport": true,
          "widgetStyle": {},
          "widgetCss": "",
          "pageSize": 1024,
          "noDataDisplayMessage": "",
          "showLegend": false
        },
        "row": 0,
        "col": 0,
        "id": "23f882ee-4efd-ec19-7ca6-d777509c5216",
        "typeFullFqn": "system.cards.html_card"
      },
      "886213c5-225a-a251-56c5-7ed2699e08b4": {
        "type": "static",
        "sizeX": 7.5,
        "sizeY": 3,
        "config": {
          "datasources": [],
          "timewindow": {
            "realtime": {
              "timewindowMs": 60000
            }
          },
          "showTitle": false,
          "backgroundColor": "#eeeeee",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px 10px",
          "settings": {
            "cardHtml": "<div class='card'></div>",
            "cardCss": ".card {\n    font-weight: bold;\n    font-size: 32px;\n    color: #999;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}"
          },
          "title": "New HTML Card",
          "dropShadow": false,
          "enableFullscreen": false,
          "enableDataExport": true,
          "widgetStyle": {},
          "widgetCss": "",
          "pageSize": 1024,
          "noDataDisplayMessage": "",
          "showLegend": false
        },
        "row": 0,
        "col": 0,
        "id": "886213c5-225a-a251-56c5-7ed2699e08b4",
        "typeFullFqn": "system.cards.html_card"
      },
      "3b7d4b64-80ae-22b5-00dc-daede00e9c85": {
        "type": "rpc",
        "sizeX": 20,
        "sizeY": 1,
        "config": {
          "showTitle": false,
          "backgroundColor": "#ffffff",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px 10px",
          "settings": {
            "optionStyle": {
              "orientation": "row",
              "isRaised": true,
              "checkedOption": {
                "isPrimary": true
              },
              "uncheckedOption": {
                "isPrimary": false,
                "bgColor": "#e6e7e8"
              }
            },
            "options": [
              {
                "optionLabel": "Nil",
                "attributeValue": "No-program"
              },
              {
                "optionLabel": "1 Day",
                "attributeValue": "One-day"
              },
              {
                "optionLabel": "1 + 5 +1",
                "attributeValue": "Sun_mon-fri_sat"
              },
              {
                "optionLabel": "7 Days",
                "attributeValue": "Every-day"
              }
            ],
            "retrieveMethod": "attribute",
            "parseValueFunction": "/* console.log(data); */\nreturn data;",
            "updateMethod": "rpc",
            "updateRPCMethod": "remoteSetPrgMode",
            "convertValueFunction": "/* console.log(value); */\nreturn value;",
            "requestTimeout": 5000,
            "retrieveAttributeKey": "prgMode",
            "title": "Program mode"
          },
          "title": "",
          "showTitleIcon": false,
          "titleIcon": null,
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "dropShadow": false,
          "enableFullscreen": false,
          "widgetStyle": {},
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "useDashboardTimewindow": true,
          "displayTimewindow": true,
          "showLegend": false,
          "actions": {},
          "targetDeviceAliases": [],
          "datasources": [],
          "targetDeviceAliasIds": [
            "6241956e-9e96-794d-24e2-3cac159dc3ca"
          ],
          "margin": "0",
          "enableDataExport": true,
          "widgetCss": "",
          "pageSize": 1024,
          "noDataDisplayMessage": ""
        },
        "id": "3b7d4b64-80ae-22b5-00dc-daede00e9c85",
        "typeFullFqn": "tenant.avantec_widgets.segmented_switch_from_string_attribute_send_rpc"
      },
      "16bd211e-0594-c232-8f1a-5dca46ec1877": {
        "type": "rpc",
        "sizeX": 9,
        "sizeY": 2,
        "config": {
          "targetDeviceAliases": [],
          "showTitle": false,
          "backgroundColor": "#fff",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px 10px",
          "settings": {
            "requestTimeout": 500,
            "convertRetrievedValueFunction": "return retrievedValue;",
            "settingList": [
              {
                "icon": "date_range",
                "isShowFunc": "return true; //console.log(convertedValue);",
                "text": "Sunday",
                "isDisabledFunc": "//console.log(convertedValue);\n\nif (convertedValue === \"No-program\") {\n    return true;\n} else if (convertedValue === \"One-day\") {\n    return true;\n} else if (convertedValue === \"Sun_mon-fri_sat\") {\n    return false;\n} else if (convertedValue === \"Every-day\") {\n    return false;\n} else {\n    return true;\n}",
                "customActionFunc": "//self.ctx.stateController.openState(state_id, widgetContext, openRightLayout); //self.ctx.stateController.updateState(...);\n\n/*\nvar entitySubType;\nvar $injector = widgetContext.$scope.$injector;\n$injector.get(widgetContext.servicesMap.get('entityService')).getEntity(entityId.entityType, entityId.id)\n  .subscribe(function(data) {\n    entitySubType = data.type;\n    if (entitySubType == 'energy meter') {\n      openDashboardStates('energy_meter_details_view');\n    } else if (entitySubType == 'thermometer') {\n      openDashboardStates('thermometer_details_view');\n    }\n  });\n*/\n\nopenDashboardStates('program_setpoints', widgetContext,\n    openRightLayout);\n\nfunction openDashboardStates(statedId, widgetContext,\n    openRightLayout) {\n    var stateParams = widgetContext.stateController\n        .getStateParams();\n    var params = {\n        //entityId: entityId,\n        //entityName: entityName,\n        daysOfWeeks: 0,\n        daysOfWeeksStr: \"Sunday\"\n    };\n    console.log(params.daysOfWeeksStr);\n    \n    if (stateParams.entityName) {\n        params.entityName = stateParams.entityName;\n    }\n    if (stateParams.entityLabel) {\n        params.entityLabel = stateParams.entityLabel;\n    }\n    if (stateParams.targetEntityParamName) {\n        params.targetEntityParamName = stateParams\n            .targetEntityParamName;\n    }\n    if (stateParams.entityId) {\n        params.entityId = stateParams.entityId;\n    }\n\n    //if (stateParams.daysOfWeeks) {\n    //    params.daysOfWeeks = stateParams.daysOfWeeks;\n    //}\n    widgetContext.stateController.openState(statedId,\n        params, openRightLayout);\n}"
              },
              {
                "icon": "date_range",
                "isShowFunc": "return true; //console.log(convertedValue);",
                "text": "Monday",
                "isDisabledFunc": "//console.log(convertedValue);\n\nif (convertedValue === \"No-program\") {\n    return true;\n} else if (convertedValue === \"One-day\") {\n    return false;\n} else if (convertedValue === \"Sun_mon-fri_sat\") {\n    return false;\n} else if (convertedValue === \"Every-day\") {\n    return false;\n} else {\n    return true;\n}",
                "customActionFunc": "//self.ctx.stateController.openState(state_id, widgetContext, openRightLayout); //self.ctx.stateController.updateState(...);\n\n/*\nvar entitySubType;\nvar $injector = widgetContext.$scope.$injector;\n$injector.get(widgetContext.servicesMap.get('entityService')).getEntity(entityId.entityType, entityId.id)\n  .subscribe(function(data) {\n    entitySubType = data.type;\n    if (entitySubType == 'energy meter') {\n      openDashboardStates('energy_meter_details_view');\n    } else if (entitySubType == 'thermometer') {\n      openDashboardStates('thermometer_details_view');\n    }\n  });\n*/\n\nopenDashboardStates('program_setpoints', widgetContext,\n    openRightLayout);\n\nfunction openDashboardStates(statedId, widgetContext,\n    openRightLayout) {\n    var stateParams = widgetContext.stateController\n        .getStateParams();\n    var params = {\n        //entityId: entityId,\n        //entityName: entityName,\n        daysOfWeeks: 1,\n        daysOfWeeksStr: \"Monday\"\n    };\n    console.log(params.daysOfWeeksStr);\n    \n    if (stateParams.entityName) {\n        params.entityName = stateParams.entityName;\n    }\n    if (stateParams.entityLabel) {\n        params.entityLabel = stateParams.entityLabel;\n    }\n    if (stateParams.targetEntityParamName) {\n        params.targetEntityParamName = stateParams\n            .targetEntityParamName;\n    }\n    if (stateParams.entityId) {\n        params.entityId = stateParams.entityId;\n    }\n\n    //if (stateParams.daysOfWeeks) {\n    //    params.daysOfWeeks = stateParams.daysOfWeeks;\n    //}\n    widgetContext.stateController.openState(statedId,\n        params, openRightLayout);\n}"
              },
              {
                "icon": "date_range",
                "text": "Tuesday",
                "isDisabledFunc": "//console.log(convertedValue);\n\nif (convertedValue === \"No-program\") {\n    return true;\n} else if (convertedValue === \"One-day\") {\n    return true;\n} else if (convertedValue === \"Sun_mon-fri_sat\") {\n    return true;\n} else if (convertedValue === \"Every-day\") {\n    return false;\n} else {\n    return true;\n}",
                "customActionFunc": "//self.ctx.stateController.openState(state_id, widgetContext, openRightLayout); //self.ctx.stateController.updateState(...);\n\n/*\nvar entitySubType;\nvar $injector = widgetContext.$scope.$injector;\n$injector.get(widgetContext.servicesMap.get('entityService')).getEntity(entityId.entityType, entityId.id)\n  .subscribe(function(data) {\n    entitySubType = data.type;\n    if (entitySubType == 'energy meter') {\n      openDashboardStates('energy_meter_details_view');\n    } else if (entitySubType == 'thermometer') {\n      openDashboardStates('thermometer_details_view');\n    }\n  });\n*/\n\nopenDashboardStates('program_setpoints', widgetContext,\n    openRightLayout);\n\nfunction openDashboardStates(statedId, widgetContext,\n    openRightLayout) {\n    var stateParams = widgetContext.stateController\n        .getStateParams();\n    var params = {\n        //entityId: entityId,\n        //entityName: entityName,\n        daysOfWeeks: 2,\n        daysOfWeeksStr: \"Tuesday\"\n    };\n    console.log(params.daysOfWeeksStr);\n    \n    if (stateParams.entityName) {\n        params.entityName = stateParams.entityName;\n    }\n    if (stateParams.entityLabel) {\n        params.entityLabel = stateParams.entityLabel;\n    }\n    if (stateParams.targetEntityParamName) {\n        params.targetEntityParamName = stateParams\n            .targetEntityParamName;\n    }\n    if (stateParams.entityId) {\n        params.entityId = stateParams.entityId;\n    }\n\n    //if (stateParams.daysOfWeeks) {\n    //    params.daysOfWeeks = stateParams.daysOfWeeks;\n    //}\n    widgetContext.stateController.openState(statedId,\n        params, openRightLayout);\n}"
              },
              {
                "icon": "date_range",
                "text": "Wednesday",
                "isDisabledFunc": "//console.log(convertedValue);\n\nif (convertedValue === \"No-program\") {\n    return true;\n} else if (convertedValue === \"One-day\") {\n    return true;\n} else if (convertedValue === \"Sun_mon-fri_sat\") {\n    return true;\n} else if (convertedValue === \"Every-day\") {\n    return false;\n} else {\n    return true;\n}",
                "customActionFunc": "//self.ctx.stateController.openState(state_id, widgetContext, openRightLayout); //self.ctx.stateController.updateState(...);\n\n/*\nvar entitySubType;\nvar $injector = widgetContext.$scope.$injector;\n$injector.get(widgetContext.servicesMap.get('entityService')).getEntity(entityId.entityType, entityId.id)\n  .subscribe(function(data) {\n    entitySubType = data.type;\n    if (entitySubType == 'energy meter') {\n      openDashboardStates('energy_meter_details_view');\n    } else if (entitySubType == 'thermometer') {\n      openDashboardStates('thermometer_details_view');\n    }\n  });\n*/\n\nopenDashboardStates('program_setpoints', widgetContext,\n    openRightLayout);\n\nfunction openDashboardStates(statedId, widgetContext,\n    openRightLayout) {\n    var stateParams = widgetContext.stateController\n        .getStateParams();\n    var params = {\n        //entityId: entityId,\n        //entityName: entityName,\n        daysOfWeeks: 3,\n        daysOfWeeksStr: \"Wednesday\"\n    };\n    console.log(params.daysOfWeeksStr);\n    \n    if (stateParams.entityName) {\n        params.entityName = stateParams.entityName;\n    }\n    if (stateParams.entityLabel) {\n        params.entityLabel = stateParams.entityLabel;\n    }\n    if (stateParams.targetEntityParamName) {\n        params.targetEntityParamName = stateParams\n            .targetEntityParamName;\n    }\n    if (stateParams.entityId) {\n        params.entityId = stateParams.entityId;\n    }\n\n    //if (stateParams.daysOfWeeks) {\n    //    params.daysOfWeeks = stateParams.daysOfWeeks;\n    //}\n    widgetContext.stateController.openState(statedId,\n        params, openRightLayout);\n}"
              },
              {
                "icon": "date_range",
                "text": "Thursday",
                "isDisabledFunc": "//console.log(convertedValue);\n\nif (convertedValue === \"No-program\") {\n    return true;\n} else if (convertedValue === \"One-day\") {\n    return true;\n} else if (convertedValue === \"Sun_mon-fri_sat\") {\n    return true;\n} else if (convertedValue === \"Every-day\") {\n    return false;\n} else {\n    return true;\n}",
                "customActionFunc": "//self.ctx.stateController.openState(state_id, widgetContext, openRightLayout); //self.ctx.stateController.updateState(...);\n\n/*\nvar entitySubType;\nvar $injector = widgetContext.$scope.$injector;\n$injector.get(widgetContext.servicesMap.get('entityService')).getEntity(entityId.entityType, entityId.id)\n  .subscribe(function(data) {\n    entitySubType = data.type;\n    if (entitySubType == 'energy meter') {\n      openDashboardStates('energy_meter_details_view');\n    } else if (entitySubType == 'thermometer') {\n      openDashboardStates('thermometer_details_view');\n    }\n  });\n*/\n\nopenDashboardStates('program_setpoints', widgetContext,\n    openRightLayout);\n\nfunction openDashboardStates(statedId, widgetContext,\n    openRightLayout) {\n    var stateParams = widgetContext.stateController\n        .getStateParams();\n    var params = {\n        //entityId: entityId,\n        //entityName: entityName,\n        daysOfWeeks: 4,\n        daysOfWeeksStr: \"Thursday\"\n    };\n    console.log(params.daysOfWeeksStr);\n    \n    if (stateParams.entityName) {\n        params.entityName = stateParams.entityName;\n    }\n    if (stateParams.entityLabel) {\n        params.entityLabel = stateParams.entityLabel;\n    }\n    if (stateParams.targetEntityParamName) {\n        params.targetEntityParamName = stateParams\n            .targetEntityParamName;\n    }\n    if (stateParams.entityId) {\n        params.entityId = stateParams.entityId;\n    }\n\n    //if (stateParams.daysOfWeeks) {\n    //    params.daysOfWeeks = stateParams.daysOfWeeks;\n    //}\n    widgetContext.stateController.openState(statedId,\n        params, openRightLayout);\n}"
              },
              {
                "icon": "date_range",
                "text": "Friday",
                "isDisabledFunc": "//console.log(convertedValue);\n\nif (convertedValue === \"No-program\") {\n    return true;\n} else if (convertedValue === \"One-day\") {\n    return true;\n} else if (convertedValue === \"Sun_mon-fri_sat\") {\n    return true;\n} else if (convertedValue === \"Every-day\") {\n    return false;\n} else {\n    return true;\n}",
                "customActionFunc": "//self.ctx.stateController.openState(state_id, widgetContext, openRightLayout); //self.ctx.stateController.updateState(...);\n\n/*\nvar entitySubType;\nvar $injector = widgetContext.$scope.$injector;\n$injector.get(widgetContext.servicesMap.get('entityService')).getEntity(entityId.entityType, entityId.id)\n  .subscribe(function(data) {\n    entitySubType = data.type;\n    if (entitySubType == 'energy meter') {\n      openDashboardStates('energy_meter_details_view');\n    } else if (entitySubType == 'thermometer') {\n      openDashboardStates('thermometer_details_view');\n    }\n  });\n*/\n\nopenDashboardStates('program_setpoints', widgetContext,\n    openRightLayout);\n\nfunction openDashboardStates(statedId, widgetContext,\n    openRightLayout) {\n    var stateParams = widgetContext.stateController\n        .getStateParams();\n    var params = {\n        //entityId: entityId,\n        //entityName: entityName,\n        daysOfWeeks: 5,\n        daysOfWeeksStr: \"Friday\"\n    };\n    console.log(params.daysOfWeeksStr);\n    \n    if (stateParams.entityName) {\n        params.entityName = stateParams.entityName;\n    }\n    if (stateParams.entityLabel) {\n        params.entityLabel = stateParams.entityLabel;\n    }\n    if (stateParams.targetEntityParamName) {\n        params.targetEntityParamName = stateParams\n            .targetEntityParamName;\n    }\n    if (stateParams.entityId) {\n        params.entityId = stateParams.entityId;\n    }\n\n    //if (stateParams.daysOfWeeks) {\n    //    params.daysOfWeeks = stateParams.daysOfWeeks;\n    //}\n    widgetContext.stateController.openState(statedId,\n        params, openRightLayout);\n}"
              },
              {
                "icon": "date_range",
                "text": "Saturday",
                "isDisabledFunc": "//console.log(convertedValue);\n\nif (convertedValue === \"No-program\") {\n    return true;\n} else if (convertedValue === \"One-day\") {\n    return true;\n} else if (convertedValue === \"Sun_mon-fri_sat\") {\n    return false;\n} else if (convertedValue === \"Every-day\") {\n    return false;\n} else {\n    return true;\n}",
                "customActionFunc": "//self.ctx.stateController.openState(state_id, widgetContext, openRightLayout); //self.ctx.stateController.updateState(...);\n\n/*\nvar entitySubType;\nvar $injector = widgetContext.$scope.$injector;\n$injector.get(widgetContext.servicesMap.get('entityService')).getEntity(entityId.entityType, entityId.id)\n  .subscribe(function(data) {\n    entitySubType = data.type;\n    if (entitySubType == 'energy meter') {\n      openDashboardStates('energy_meter_details_view');\n    } else if (entitySubType == 'thermometer') {\n      openDashboardStates('thermometer_details_view');\n    }\n  });\n*/\n\nopenDashboardStates('program_setpoints', widgetContext,\n    openRightLayout);\n\nfunction openDashboardStates(statedId, widgetContext,\n    openRightLayout) {\n    var stateParams = widgetContext.stateController\n        .getStateParams();\n    var params = {\n        //entityId: entityId,\n        //entityName: entityName,\n        daysOfWeeks: 6,\n        daysOfWeeksStr: \"Saturday\"\n    };\n    console.log(params.daysOfWeeksStr);\n    \n    if (stateParams.entityName) {\n        params.entityName = stateParams.entityName;\n    }\n    if (stateParams.entityLabel) {\n        params.entityLabel = stateParams.entityLabel;\n    }\n    if (stateParams.targetEntityParamName) {\n        params.targetEntityParamName = stateParams\n            .targetEntityParamName;\n    }\n    if (stateParams.entityId) {\n        params.entityId = stateParams.entityId;\n    }\n\n    //if (stateParams.daysOfWeeks) {\n    //    params.daysOfWeeks = stateParams.daysOfWeeks;\n    //}\n    widgetContext.stateController.openState(statedId,\n        params, openRightLayout);\n}"
              }
            ],
            "retrievedMethod": "attribute",
            "retrievedRPCMethodName": "getValue",
            "retrievedAttributeKey": "prgMode",
            "title": "Days of the week"
          },
          "title": "Navigation:  Program Setpoints xxxsdfasd",
          "showTitleIcon": false,
          "titleTooltip": "",
          "dropShadow": false,
          "enableFullscreen": false,
          "widgetStyle": {},
          "widgetCss": "",
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "noDataDisplayMessage": "",
          "showLegend": false,
          "datasources": [],
          "targetDeviceAliasIds": [
            "6241956e-9e96-794d-24e2-3cac159dc3ca"
          ],
          "enableDataExport": true,
          "pageSize": 1024,
          "mobileOrder": 10,
          "mobileHeight": 3
        },
        "row": 0,
        "col": 0,
        "id": "16bd211e-0594-c232-8f1a-5dca46ec1877",
        "typeFullFqn": "tenant.avantec_widgets.setting_list"
      },
      "1ab9c95c-7d2c-f4b2-0a37-432f19418528": {
        "type": "static",
        "sizeX": 7.5,
        "sizeY": 3,
        "config": {
          "datasources": [],
          "timewindow": {
            "realtime": {
              "timewindowMs": 60000
            }
          },
          "showTitle": false,
          "backgroundColor": "#eeeeee",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px 10px",
          "settings": {
            "cardHtml": "<div class='card'></div>",
            "cardCss": ".card {\n    font-weight: bold;\n    font-size: 32px;\n    color: #999;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}"
          },
          "title": "New HTML Card",
          "dropShadow": false,
          "enableFullscreen": false,
          "enableDataExport": true,
          "widgetStyle": {},
          "widgetCss": "",
          "pageSize": 1024,
          "noDataDisplayMessage": "",
          "showLegend": false
        },
        "row": 0,
        "col": 0,
        "id": "1ab9c95c-7d2c-f4b2-0a37-432f19418528",
        "typeFullFqn": "system.cards.html_card"
      },
      "b51d2eca-9e33-d629-763b-81272ae33f88": {
        "type": "static",
        "sizeX": 7.5,
        "sizeY": 3,
        "config": {
          "datasources": [],
          "timewindow": {
            "realtime": {
              "timewindowMs": 60000
            }
          },
          "showTitle": false,
          "backgroundColor": "#eeeeee",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px 10px",
          "settings": {
            "cardHtml": "<div class='card'></div>",
            "cardCss": ".card {\n    font-weight: bold;\n    font-size: 32px;\n    color: #999;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}"
          },
          "title": "New HTML Card",
          "dropShadow": false,
          "enableFullscreen": false,
          "enableDataExport": true,
          "widgetStyle": {},
          "widgetCss": "",
          "pageSize": 1024,
          "noDataDisplayMessage": "",
          "showLegend": false
        },
        "row": 0,
        "col": 0,
        "id": "b51d2eca-9e33-d629-763b-81272ae33f88",
        "typeFullFqn": "system.cards.html_card"
      },
      "0cb7bd1f-3b20-7bb7-1a69-c54fc73369ba": {
        "type": "static",
        "sizeX": 7.5,
        "sizeY": 3,
        "config": {
          "datasources": [],
          "timewindow": {
            "realtime": {
              "timewindowMs": 60000
            }
          },
          "showTitle": false,
          "backgroundColor": "#eeeeee",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px 10px",
          "settings": {
            "cardHtml": "<div class='card'></div>",
            "cardCss": ".card {\n    font-weight: bold;\n    font-size: 32px;\n    color: #999;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}"
          },
          "title": "New HTML Card",
          "dropShadow": false,
          "enableFullscreen": false,
          "enableDataExport": true,
          "widgetStyle": {},
          "widgetCss": "",
          "pageSize": 1024,
          "noDataDisplayMessage": "",
          "showLegend": false
        },
        "row": 0,
        "col": 0,
        "id": "0cb7bd1f-3b20-7bb7-1a69-c54fc73369ba",
        "typeFullFqn": "system.cards.html_card"
      },
      "0f141e75-343e-b186-09f3-ababd6c0dab5": {
        "type": "rpc",
        "sizeX": 4,
        "sizeY": 2,
        "config": {
          "showTitle": false,
          "backgroundColor": "#ffffff",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px 10px",
          "settings": {
            "optionStyle": {
              "orientation": "row",
              "isRaised": true,
              "checkedOption": {
                "isPrimary": true
              },
              "uncheckedOption": {
                "isPrimary": false,
                "bgColor": "#e6e7e8"
              }
            },
            "options": [
              {
                "optionLabel": "°C",
                "attributeValue": "°C"
              },
              {
                "optionLabel": "°F",
                "attributeValue": "°F"
              }
            ],
            "retrieveMethod": "attribute",
            "retrieveAttributeKey": "tempUnit",
            "parseValueFunction": "/* console.log(data); */\nreturn data;",
            "updateMethod": "rpc",
            "updateRPCMethod": "remoteSetTempUnit",
            "convertValueFunction": "/* console.log(value); */\nreturn value;",
            "requestTimeout": 5000,
            "title": "Temperature unit (Your thermostat needs to be restarted !)"
          },
          "title": "",
          "showTitleIcon": false,
          "titleIcon": null,
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "dropShadow": false,
          "enableFullscreen": false,
          "widgetStyle": {},
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "useDashboardTimewindow": true,
          "displayTimewindow": true,
          "showLegend": false,
          "actions": {},
          "targetDeviceAliases": [],
          "datasources": [],
          "targetDeviceAliasIds": [
            "6241956e-9e96-794d-24e2-3cac159dc3ca"
          ],
          "enableDataExport": true,
          "widgetCss": "",
          "pageSize": 1024,
          "noDataDisplayMessage": ""
        },
        "id": "0f141e75-343e-b186-09f3-ababd6c0dab5",
        "typeFullFqn": "tenant.avantec_widgets.segmented_switch_from_string_attribute_send_rpc"
      },
      "81abae93-bb40-3db0-c535-eca663ff3841": {
        "type": "static",
        "sizeX": 7.5,
        "sizeY": 3,
        "config": {
          "datasources": [],
          "timewindow": {
            "realtime": {
              "timewindowMs": 60000
            }
          },
          "showTitle": false,
          "backgroundColor": "#eeeeee",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px 10px",
          "settings": {
            "cardHtml": "<div class='card'></div>",
            "cardCss": ".card {\n    font-weight: bold;\n    font-size: 32px;\n    color: #999;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}"
          },
          "title": "New HTML Card",
          "dropShadow": false,
          "enableFullscreen": false,
          "enableDataExport": true,
          "widgetStyle": {},
          "widgetCss": "",
          "pageSize": 1024,
          "noDataDisplayMessage": "",
          "showLegend": false
        },
        "row": 0,
        "col": 0,
        "id": "81abae93-bb40-3db0-c535-eca663ff3841",
        "typeFullFqn": "system.cards.html_card"
      },
      "3bacda62-c3a1-54a5-3dd9-02910254eb46": {
        "type": "rpc",
        "sizeX": 4,
        "sizeY": 2,
        "config": {
          "showTitle": false,
          "backgroundColor": "#ffffff",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px 10px",
          "settings": {
            "optionStyle": {
              "orientation": "row",
              "isRaised": true,
              "checkedOption": {
                "isPrimary": true
              },
              "uncheckedOption": {
                "isPrimary": false,
                "bgColor": "#e6e7e8"
              }
            },
            "options": [
              {
                "optionLabel": "Heat",
                "attributeValue": "Heat"
              },
              {
                "optionLabel": "Cool",
                "attributeValue": "Cool"
              }
            ],
            "retrieveMethod": "attribute",
            "retrieveAttributeKey": "systemMode",
            "parseValueFunction": "/* console.log(data); */\nreturn data;",
            "updateMethod": "rpc",
            "updateRPCMethod": "remoteSetSystemMode",
            "convertValueFunction": "/* console.log(value); */\nreturn value;",
            "requestTimeout": 5000,
            "title": "System mode"
          },
          "title": "",
          "showTitleIcon": false,
          "titleIcon": null,
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "dropShadow": false,
          "enableFullscreen": false,
          "widgetStyle": {},
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "useDashboardTimewindow": true,
          "displayTimewindow": true,
          "showLegend": false,
          "actions": {},
          "targetDeviceAliases": [],
          "datasources": [],
          "targetDeviceAliasIds": [
            "6241956e-9e96-794d-24e2-3cac159dc3ca"
          ],
          "enableDataExport": true,
          "widgetCss": "",
          "pageSize": 1024,
          "noDataDisplayMessage": ""
        },
        "id": "3bacda62-c3a1-54a5-3dd9-02910254eb46",
        "typeFullFqn": "tenant.avantec_widgets.segmented_switch_from_string_attribute_send_rpc"
      },
      "2ea49be4-8a77-189c-c714-035075079c6a": {
        "type": "rpc",
        "sizeX": 4,
        "sizeY": 2,
        "config": {
          "showTitle": false,
          "backgroundColor": "#ffffff",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px 10px",
          "settings": {
            "retrieveAttributeKey": "floorTempLimited",
            "updateMethod": "rpc",
            "updateRPCMethod": "remoteSetFloorTempLimited",
            "convertValueFunction": "/* console.log(value); */\nreturn value;",
            "requestTimeout": 5000,
            "retrieveAttributeKeyOfMinValue": "floorTempLimitedMin",
            "retrieveAttributeKeyOfMaxValue": "floorTempLimitedMax",
            "retrieveAttributeKeyOfStepValue": "floorTempLimitedStep",
            "retrieveAttributeKeyOfUnit": "currentTempUnit",
            "title": "Floor temperature limited (external sensor)"
          },
          "title": "",
          "showTitleIcon": false,
          "titleIcon": null,
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "dropShadow": false,
          "enableFullscreen": false,
          "widgetStyle": {},
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "useDashboardTimewindow": true,
          "displayTimewindow": true,
          "showLegend": false,
          "actions": {},
          "targetDeviceAliases": [],
          "datasources": [],
          "decimals": 1,
          "targetDeviceAliasIds": [
            "6241956e-9e96-794d-24e2-3cac159dc3ca"
          ],
          "enableDataExport": true,
          "widgetCss": "",
          "pageSize": 1024,
          "noDataDisplayMessage": ""
        },
        "id": "2ea49be4-8a77-189c-c714-035075079c6a",
        "typeFullFqn": "tenant.avantec_widgets.select_double_value_from_flexiable_options"
      },
      "507bbc9a-edf7-f2f0-ecd8-ace41f538f4c": {
        "type": "rpc",
        "sizeX": 4,
        "sizeY": 2,
        "config": {
          "showTitle": false,
          "backgroundColor": "#ffffff",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px 10px",
          "settings": {
            "optionStyle": {
              "orientation": "row",
              "isRaised": true,
              "checkedOption": {
                "isPrimary": true
              },
              "uncheckedOption": {
                "isPrimary": false,
                "bgColor": "#e6e7e8"
              }
            },
            "retrieveMethod": "attribute",
            "retrieveAttributeKey": "adaptiveControl",
            "updateMethod": "rpc",
            "updateRPCMethod": "remoteSetAdaptiveControl",
            "requestTimeout": 5000,
            "parseValueFunction": "/* console.log(\"parseValueFunction():\", data); */\nreturn data;",
            "convertValueFunction": "/* console.log(\"convertValueFunction():\", value); */\nreturn value;",
            "options": {
              "trueLabel": "Enabled",
              "falseLabel": "Disabled"
            },
            "title": "Adaptive control"
          },
          "title": "",
          "showTitleIcon": false,
          "titleIcon": null,
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "dropShadow": false,
          "enableFullscreen": false,
          "widgetStyle": {},
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "useDashboardTimewindow": true,
          "displayTimewindow": true,
          "showLegend": false,
          "actions": {},
          "targetDeviceAliases": [],
          "datasources": [],
          "targetDeviceAliasIds": [
            "6241956e-9e96-794d-24e2-3cac159dc3ca"
          ],
          "enableDataExport": true,
          "widgetCss": "",
          "pageSize": 1024,
          "noDataDisplayMessage": ""
        },
        "id": "507bbc9a-edf7-f2f0-ecd8-ace41f538f4c",
        "typeFullFqn": "tenant.avantec_widgets.segment_switch_of_boolean"
      },
      "dee51c4b-1b3f-ddc4-ecfa-314eee6673bf": {
        "type": "static",
        "sizeX": 7.5,
        "sizeY": 3,
        "config": {
          "datasources": [],
          "timewindow": {
            "realtime": {
              "timewindowMs": 60000
            }
          },
          "showTitle": false,
          "backgroundColor": "#eeeeee",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px 10px",
          "settings": {
            "cardHtml": "<div class='card'></div>",
            "cardCss": ".card {\n    font-weight: bold;\n    font-size: 32px;\n    color: #999;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}"
          },
          "title": "New HTML Card",
          "dropShadow": false,
          "enableFullscreen": false,
          "enableDataExport": true,
          "widgetStyle": {},
          "widgetCss": "",
          "pageSize": 1024,
          "noDataDisplayMessage": "",
          "showLegend": false
        },
        "row": 0,
        "col": 0,
        "id": "dee51c4b-1b3f-ddc4-ecfa-314eee6673bf",
        "typeFullFqn": "system.cards.html_card"
      },
      "74a60278-4324-5684-84d2-da926ad2be5c": {
        "type": "rpc",
        "sizeX": 4,
        "sizeY": 2,
        "config": {
          "showTitle": false,
          "backgroundColor": "#ffffff",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px 10px",
          "settings": {
            "retrieveAttributeKey": "internalOffset",
            "updateMethod": "rpc",
            "updateRPCMethod": "remoteSetInternalOffset",
            "convertValueFunction": "/* console.log(value); */\nreturn value;",
            "requestTimeout": 5000,
            "retrieveAttributeKeyOfMinValue": "internalOffsetMin",
            "retrieveAttributeKeyOfMaxValue": "internalOffsetMax",
            "retrieveAttributeKeyOfStepValue": "internalOffsetStep",
            "retrieveAttributeKeyOfUnit": "currentTempUnit",
            "title": "Temperature offset  of internal sensor"
          },
          "title": "",
          "showTitleIcon": false,
          "titleIcon": null,
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "dropShadow": false,
          "enableFullscreen": false,
          "widgetStyle": {},
          "titleStyle": {
            "fontSize": "14px",
            "fontWeight": 400
          },
          "useDashboardTimewindow": true,
          "displayTimewindow": true,
          "showLegend": false,
          "actions": {},
          "targetDeviceAliases": [],
          "datasources": [],
          "decimals": 1,
          "targetDeviceAliasIds": [
            "6241956e-9e96-794d-24e2-3cac159dc3ca"
          ],
          "enableDataExport": true,
          "widgetCss": "",
          "pageSize": 1024,
          "noDataDisplayMessage": ""
        },
        "id": "74a60278-4324-5684-84d2-da926ad2be5c",
        "typeFullFqn": "tenant.avantec_widgets.select_double_value_from_flexiable_options"
      },
      "b55b4f1e-ed7a-b803-f589-7dc46ca03a9f": {
        "type": "rpc",
        "sizeX": 4,
        "sizeY": 2,
        "config": {
          "showTitle": false,
          "backgroundColor": "#ffffff",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px 10px",
          "settings": {
            "retrieveAttributeKey": "switchingDiffHeating",
            "updateMethod": "rpc",
            "updateRPCMethod": "remoteSetSwitchingDiffHeating",
            "convertValueFunction": "/* console.log(value); */\nreturn value;",
            "requestTimeout": 5000,
            "retrieveAttributeKeyOfMinValue": "switchingDiffHeatingMin",
            "retrieveAttributeKeyOfMaxValue": "switchingDiffHeatingMax",
            "retrieveAttributeKeyOfStepValue": "switchingDiffHeatingStep",
            "retrieveAttributeKeyOfUnit": "currentTempUnit",
            "title": "Switching differential heating"
          },
          "title": "",
          "showTitleIcon": false,
          "titleIcon": null,
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "dropShadow": false,
          "enableFullscreen": false,
          "widgetStyle": {},
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "useDashboardTimewindow": true,
          "displayTimewindow": true,
          "showLegend": false,
          "actions": {},
          "targetDeviceAliases": [],
          "datasources": [],
          "decimals": 1,
          "targetDeviceAliasIds": [
            "6241956e-9e96-794d-24e2-3cac159dc3ca"
          ],
          "enableDataExport": true,
          "widgetCss": "",
          "pageSize": 1024,
          "noDataDisplayMessage": ""
        },
        "id": "b55b4f1e-ed7a-b803-f589-7dc46ca03a9f",
        "typeFullFqn": "tenant.avantec_widgets.select_double_value_from_flexiable_options"
      },
      "388a863f-a615-714b-d9d2-7f7a2de81aa3": {
        "type": "rpc",
        "sizeX": 4,
        "sizeY": 2,
        "config": {
          "showTitle": false,
          "backgroundColor": "#ffffff",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px 10px",
          "settings": {
            "retrieveAttributeKey": "switchingDiffCooling",
            "updateMethod": "rpc",
            "updateRPCMethod": "remoteSetSwitchingDiffCooling",
            "convertValueFunction": "/* console.log(value); */\nreturn value;",
            "requestTimeout": 5000,
            "retrieveAttributeKeyOfMinValue": "switchingDiffCoolingMin",
            "retrieveAttributeKeyOfMaxValue": "switchingDiffCoolingMax",
            "retrieveAttributeKeyOfStepValue": "switchingDiffCoolingStep",
            "retrieveAttributeKeyOfUnit": "currentTempUnit",
            "title": "Switching differential cooling"
          },
          "title": "",
          "showTitleIcon": false,
          "titleIcon": null,
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "dropShadow": false,
          "enableFullscreen": false,
          "widgetStyle": {},
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "useDashboardTimewindow": true,
          "displayTimewindow": true,
          "showLegend": false,
          "actions": {},
          "targetDeviceAliases": [],
          "datasources": [],
          "decimals": 1,
          "targetDeviceAliasIds": [
            "6241956e-9e96-794d-24e2-3cac159dc3ca"
          ],
          "enableDataExport": true,
          "widgetCss": "",
          "pageSize": 1024,
          "noDataDisplayMessage": ""
        },
        "id": "388a863f-a615-714b-d9d2-7f7a2de81aa3",
        "typeFullFqn": "tenant.avantec_widgets.select_double_value_from_flexiable_options"
      },
      "c4f50849-7d55-3814-4a1b-8a2cb00718b8": {
        "type": "static",
        "sizeX": 7.5,
        "sizeY": 3,
        "config": {
          "datasources": [],
          "timewindow": {
            "realtime": {
              "timewindowMs": 60000
            }
          },
          "showTitle": false,
          "backgroundColor": "#eeeeee",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px 10px",
          "settings": {
            "cardHtml": "<div class='card'></div>",
            "cardCss": ".card {\n    font-weight: bold;\n    font-size: 32px;\n    color: #999;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}"
          },
          "title": "New HTML Card",
          "dropShadow": false,
          "enableFullscreen": false,
          "enableDataExport": true,
          "widgetStyle": {},
          "widgetCss": "",
          "pageSize": 1024,
          "noDataDisplayMessage": "",
          "showLegend": false
        },
        "row": 0,
        "col": 0,
        "id": "c4f50849-7d55-3814-4a1b-8a2cb00718b8",
        "typeFullFqn": "system.cards.html_card"
      },
      "3bdcede1-824b-b66e-16d1-3c55742852e6": {
        "type": "static",
        "sizeX": 7.5,
        "sizeY": 3,
        "config": {
          "datasources": [],
          "timewindow": {
            "realtime": {
              "timewindowMs": 60000
            }
          },
          "showTitle": false,
          "backgroundColor": "#eeeeee",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px 10px",
          "settings": {
            "cardHtml": "<div class='card'></div>",
            "cardCss": ".card {\n    font-weight: bold;\n    font-size: 32px;\n    color: #999;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}"
          },
          "title": "New HTML Card",
          "dropShadow": false,
          "enableFullscreen": false,
          "enableDataExport": true,
          "widgetStyle": {},
          "widgetCss": "",
          "pageSize": 1024,
          "noDataDisplayMessage": "",
          "showLegend": false
        },
        "row": 0,
        "col": 0,
        "id": "3bdcede1-824b-b66e-16d1-3c55742852e6",
        "typeFullFqn": "system.cards.html_card"
      },
      "d143d653-799f-3cb5-011a-a729359d12e0": {
        "type": "static",
        "sizeX": 7.5,
        "sizeY": 3,
        "config": {
          "datasources": [],
          "timewindow": {
            "realtime": {
              "timewindowMs": 60000
            }
          },
          "showTitle": false,
          "backgroundColor": "#eeeeee",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px 10px",
          "settings": {
            "cardHtml": "<div class='card'></div>",
            "cardCss": ".card {\n    font-weight: bold;\n    font-size: 32px;\n    color: #999;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}"
          },
          "title": "New HTML Card",
          "dropShadow": false,
          "enableFullscreen": false,
          "enableDataExport": true,
          "widgetStyle": {},
          "widgetCss": "",
          "pageSize": 1024,
          "noDataDisplayMessage": "",
          "showLegend": false
        },
        "row": 0,
        "col": 0,
        "id": "d143d653-799f-3cb5-011a-a729359d12e0",
        "typeFullFqn": "system.cards.html_card"
      },
      "a22c3e75-7a27-c3cb-6223-7af483e09329": {
        "type": "rpc",
        "sizeX": 8,
        "sizeY": 2,
        "config": {
          "showTitle": false,
          "backgroundColor": "#ffffff",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px 10px",
          "settings": {
            "optionStyle": {
              "orientation": "row",
              "isRaised": true,
              "checkedOption": {
                "isPrimary": true
              },
              "uncheckedOption": {
                "isPrimary": false,
                "bgColor": "#e6e7e8"
              }
            },
            "options": [
              {
                "optionLabel": "12 Hours",
                "attributeValue": "12hours"
              },
              {
                "optionLabel": "24 Hours",
                "attributeValue": "24hours"
              }
            ],
            "retrieveMethod": "attribute",
            "retrieveAttributeKey": "timeFormat",
            "parseValueFunction": "/* console.log(data); */\nreturn data;",
            "updateMethod": "rpc",
            "updateRPCMethod": "remoteSetTimeFormat",
            "convertValueFunction": "/* console.log(value); */\nreturn value;",
            "requestTimeout": 5000,
            "title": "Time format"
          },
          "title": "",
          "showTitleIcon": false,
          "titleIcon": null,
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "dropShadow": false,
          "enableFullscreen": false,
          "widgetStyle": {},
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "useDashboardTimewindow": true,
          "displayTimewindow": true,
          "showLegend": false,
          "actions": {},
          "targetDeviceAliases": [],
          "datasources": [],
          "targetDeviceAliasIds": [
            "6241956e-9e96-794d-24e2-3cac159dc3ca"
          ],
          "enableDataExport": true,
          "widgetCss": "",
          "pageSize": 1024,
          "noDataDisplayMessage": ""
        },
        "id": "a22c3e75-7a27-c3cb-6223-7af483e09329",
        "typeFullFqn": "tenant.avantec_widgets.segmented_switch_from_string_attribute_send_rpc"
      },
      "4255b0cd-050c-d631-f877-106ec2a927fe": {
        "type": "rpc",
        "sizeX": 3,
        "sizeY": 2,
        "config": {
          "showTitle": false,
          "backgroundColor": "#ffffff",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px 10px",
          "settings": {
            "retrieveMethod": "attribute",
            "retrieveAttributeKey": "timezone",
            "parseValueFunction": "/* console.log(data); */\nreturn data;",
            "updateMethod": "SHARED_SCOPE",
            "updateAttributeKey": "timezone",
            "convertValueFunction": "/* console.log(value); */\nreturn value;",
            "requestTimeout": 5000,
            "title": "Time zone"
          },
          "title": "",
          "showTitleIcon": false,
          "titleIcon": null,
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "dropShadow": false,
          "enableFullscreen": false,
          "widgetStyle": {},
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "useDashboardTimewindow": true,
          "displayTimewindow": true,
          "showLegend": false,
          "actions": {},
          "targetDeviceAliases": [],
          "datasources": [],
          "targetDeviceAliasIds": [
            "6241956e-9e96-794d-24e2-3cac159dc3ca"
          ],
          "enableDataExport": true,
          "widgetCss": "",
          "pageSize": 1024,
          "noDataDisplayMessage": ""
        },
        "id": "4255b0cd-050c-d631-f877-106ec2a927fe",
        "typeFullFqn": "tenant.avantec_widgets.select_timezone_value"
      },
      "ed5533b1-b6b2-9b3b-1859-d7bb2c533501": {
        "type": "latest",
        "sizeX": 5,
        "sizeY": 2,
        "config": {
          "datasources": [
            {
              "type": "entity",
              "name": null,
              "entityAliasId": "6241956e-9e96-794d-24e2-3cac159dc3ca",
              "filterId": null,
              "dataKeys": [
                {
                  "name": "timeNTPServer",
                  "type": "attribute",
                  "label": "timeNTPServer",
                  "color": "#2196f3",
                  "settings": {},
                  "_hash": 0.5451743235540067
                }
              ]
            }
          ],
          "timewindow": {
            "displayValue": "",
            "selectedTab": 0,
            "realtime": {
              "realtimeType": 1,
              "interval": 1000,
              "timewindowMs": 60000,
              "quickInterval": "CURRENT_DAY"
            },
            "history": {
              "historyType": 0,
              "interval": 1000,
              "timewindowMs": 60000,
              "fixedTimewindow": {
                "startTimeMs": 1681702405191,
                "endTimeMs": 1681788805191
              },
              "quickInterval": "CURRENT_DAY"
            },
            "aggregation": {
              "type": "AVG",
              "limit": 25000
            }
          },
          "showTitle": false,
          "backgroundColor": "#fff",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "4px",
          "settings": {
            "widgetTitle": "NTP server",
            "showLabel": true,
            "isRequired": true,
            "requiredErrorMessage": "input text is error",
            "showResultMessage": true,
            "labelValue": "NTP server (uk.pool.ntp.org, 1.pool.ntp.org, etc.)",
            "minLength": 0,
            "maxLength": 127
          },
          "title": "",
          "dropShadow": false,
          "enableFullscreen": false,
          "enableDataExport": false,
          "widgetStyle": {},
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "useDashboardTimewindow": true,
          "showLegend": false,
          "actions": {},
          "showTitleIcon": false,
          "titleIcon": null,
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "displayTimewindow": true,
          "widgetCss": "",
          "pageSize": 1024,
          "noDataDisplayMessage": "",
          "legendConfig": {
            "direction": "column",
            "position": "bottom",
            "sortDataKeys": false,
            "showMin": false,
            "showMax": false,
            "showAvg": false,
            "showTotal": false
          }
        },
        "id": "ed5533b1-b6b2-9b3b-1859-d7bb2c533501",
        "typeFullFqn": "system.input_widgets.update_shared_string_attribute"
      },
      "67d15d7d-7d35-783a-d892-c1dfde4ce898": {
        "type": "rpc",
        "sizeX": 4,
        "sizeY": 2,
        "config": {
          "showTitle": false,
          "backgroundColor": "#ffffff",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px 10px",
          "settings": {
            "retrieveMethod": "none",
            "updateMethod": "rpc",
            "updateRPCMethod": "remoteSyncTimeRequest",
            "requestTimeout": 5000,
            "buttonState": {
              "on": {
                "value": "true",
                "label": "Sync Now",
                "isRaised": true,
                "isPrimary": true
              },
              "off": {
                "value": "false",
                "label": "Sync Now",
                "isRaised": true,
                "isPrimary": false,
                "bgColor": "#e6e7e8"
              }
            },
            "convertValueFunction": "return {};",
            "title": "Synchronize datetime"
          },
          "title": "",
          "showTitleIcon": false,
          "titleIcon": null,
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "dropShadow": false,
          "enableFullscreen": false,
          "widgetStyle": {},
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "useDashboardTimewindow": true,
          "displayTimewindow": true,
          "showLegend": false,
          "actions": {},
          "targetDeviceAliases": [],
          "datasources": [],
          "targetDeviceAliasIds": [
            "6241956e-9e96-794d-24e2-3cac159dc3ca"
          ],
          "enableDataExport": true,
          "widgetCss": "",
          "pageSize": 1024,
          "noDataDisplayMessage": ""
        },
        "id": "67d15d7d-7d35-783a-d892-c1dfde4ce898",
        "typeFullFqn": "tenant.avantec_widgets.styled_button_of_string_value"
      },
      "2f8acba3-a1b4-2196-3c1f-91ea4efc6058": {
        "type": "latest",
        "sizeX": 7.5,
        "sizeY": 3,
        "config": {
          "datasources": [
            {
              "type": "entity",
              "name": null,
              "entityAliasId": "6241956e-9e96-794d-24e2-3cac159dc3ca",
              "filterId": null,
              "dataKeys": [
                {
                  "name": "model",
                  "type": "attribute",
                  "label": "model",
                  "color": "#ffc107",
                  "settings": {},
                  "_hash": 0.9281272304914616
                },
                {
                  "name": "mac",
                  "type": "attribute",
                  "label": "mac",
                  "color": "#607d8b",
                  "settings": {},
                  "_hash": 0.25207043219052827
                },
                {
                  "name": "wifiFWVersion",
                  "type": "attribute",
                  "label": "wifiFWVersion",
                  "color": "#f44336",
                  "settings": {},
                  "_hash": 0.7655452152250501
                },
                {
                  "name": "mcuFWVersion",
                  "type": "attribute",
                  "label": "mcuFWVersion",
                  "color": "#ffc107",
                  "settings": {},
                  "_hash": 0.7681201378327647
                },
                {
                  "name": "name",
                  "type": "entityField",
                  "label": "name",
                  "color": "#607d8b",
                  "settings": {},
                  "_hash": 0.1429362656951716,
                  "units": null,
                  "decimals": null,
                  "funcBody": null,
                  "usePostProcessing": null,
                  "postFuncBody": null
                },
                {
                  "name": "type",
                  "type": "entityField",
                  "label": "type",
                  "color": "#9c27b0",
                  "settings": {},
                  "_hash": 0.1520945911078957,
                  "units": null,
                  "decimals": null,
                  "funcBody": null,
                  "usePostProcessing": null,
                  "postFuncBody": null
                },
                {
                  "name": "label",
                  "type": "entityField",
                  "label": "label",
                  "color": "#8bc34a",
                  "settings": {},
                  "_hash": 0.4711814499015259,
                  "units": null,
                  "decimals": null,
                  "funcBody": null,
                  "usePostProcessing": null,
                  "postFuncBody": null
                }
              ]
            }
          ],
          "timewindow": {
            "displayValue": "",
            "selectedTab": 0,
            "realtime": {
              "realtimeType": 1,
              "interval": 1000,
              "timewindowMs": 60000,
              "quickInterval": "CURRENT_DAY"
            },
            "history": {
              "historyType": 0,
              "interval": 1000,
              "timewindowMs": 60000,
              "fixedTimewindow": {
                "startTimeMs": 1681702405191,
                "endTimeMs": 1681788805191
              },
              "quickInterval": "CURRENT_DAY"
            },
            "aggregation": {
              "type": "AVG",
              "limit": 25000
            }
          },
          "showTitle": false,
          "backgroundColor": "#fff",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px 10px",
          "settings": {
            "cardHtml": "<div class='card'>\n    <div class='content'>\n        <table>\n            <tr>\n                <td width=\"40%\">\n                    <div class='description'>\n                        Device name\n                    </div>\n                </td>\n                <td width=\"60%\">\n                    <div class='value'>\n                        ${name}\n                    </div>\n                </td>\n            </tr>\n            <tr>\n                <td width=\"40%\">\n                    <div class='description'>\n                        Device profile (Type)\n                    </div>\n                </td>\n                <td width=\"60%\">\n                    <div class='value'>\n                        ${type}\n                    </div>\n                </td>\n            </tr>\n            <tr>\n                <td width=\"40%\">\n                    <div class='description'>\n                        Label\n                    </div>\n                </td>\n                <td width=\"60%\">\n                    <div class='value'>\n                        ${label}\n                    </div>\n                </td>\n            </tr>\n            <tr>\n                <td width=\"40%\">\n                    <div class='description'>\n                        Model\n                    </div>\n                </td>\n                <td width=\"60%\">\n                    <div class='value'>\n                        ${model}\n                    </div>\n                </td>\n            </tr>\n            <tr>\n                <td width=\"40%\">\n                    <div class='description'>\n                        MAC\n                    </div>\n                </td>\n                <td width=\"60%\">\n                    <div class='value'>\n                        ${mac}\n                    </div>\n                </td>\n            </tr>\n            <tr>\n                <td width=\"40%\">\n                    <div class='description'>\n                        Wi-Fi F/W version\n                    </div>\n                </td>\n                <td width=\"60%\">\n                    <div class='value'>\n                        ${wifiFWVersion}\n                    </div>\n                </td>\n            </tr>\n            <tr>\n                <td width=\"40%\">\n                    <div class='description'>\n                        MCU F/W version\n                    </div>\n                </td>\n                <td width=\"60%\">\n                    <div class='value'>\n                        ${mcuFWVersion}\n                    </div>\n                </td>\n            </tr>\n        </table>\n    </div>\n</div>",
            "cardCss": ".card {\n   width: 100%;\n   height: 100%;\n   border: 0px solid #E0E0E0;\n   box-sizing: border-box;\n}\n\n.card .content {\n   padding: 22px 10px;\n   display: flex;\n   flex-direction: column;\n   justify-content: center;\n   height: 100%;\n   box-sizing: border-box;\n}\n\n.card .value {\n    font-size: 1.0em;\n    font-weight: bold;\n    line-height: 1.5;\n    color: #333333;\n    text-align: left;\n}\n\n.card .description {\n    font-size: 0.8em;\n    font-weight: normal;\n    line-height: 1.5;\n    color: #333333;\n    text-align: left;\n    opacity: 0.5;\n}\n\n@media (min-width: 960px) and (max-width: 1200px) {\n    .card .value {\n        font-size: 1.2em;\n        line-height: 1;\n    }\n    \n    .card .description {\n        font-size: 0.8em;\n        line-height: 1;\n    }\n}"
          },
          "title": "New HTML Value Card",
          "dropShadow": false,
          "enableFullscreen": false,
          "widgetStyle": {},
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "useDashboardTimewindow": true,
          "showLegend": false,
          "actions": {},
          "enableDataExport": false,
          "widgetCss": "",
          "pageSize": 1024,
          "decimals": 1,
          "noDataDisplayMessage": "",
          "mobileOrder": 10
        },
        "row": 0,
        "col": 0,
        "id": "2f8acba3-a1b4-2196-3c1f-91ea4efc6058",
        "typeFullFqn": "system.cards.html_value_card"
      },
      "96be3476-b2c1-d3f0-eafd-5b87bc060291": {
        "type": "rpc",
        "sizeX": 3,
        "sizeY": 1,
        "config": {
          "showTitle": false,
          "backgroundColor": "#ffffff",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px 10px",
          "settings": {
            "retrieveMethod": "none",
            "updateMethod": "rpc",
            "updateRPCMethod": "remoteRebootDevice",
            "requestTimeout": 5000,
            "buttonState": {
              "on": {
                "value": "true",
                "label": "Reboot",
                "isRaised": true,
                "isPrimary": true
              },
              "off": {
                "value": "false",
                "label": "Reboot",
                "isRaised": true,
                "textColor": "#000000",
                "isPrimary": false,
                "bgColor": "#e6e7e8"
              }
            },
            "convertValueFunction": "return {};"
          },
          "title": "Reboot Device",
          "showTitleIcon": false,
          "titleIcon": null,
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "dropShadow": false,
          "enableFullscreen": false,
          "widgetStyle": {},
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "useDashboardTimewindow": true,
          "displayTimewindow": true,
          "showLegend": false,
          "actions": {},
          "targetDeviceAliases": [],
          "datasources": [],
          "targetDeviceAliasIds": [
            "6241956e-9e96-794d-24e2-3cac159dc3ca"
          ],
          "enableDataExport": true,
          "widgetCss": "",
          "pageSize": 1024,
          "noDataDisplayMessage": ""
        },
        "id": "96be3476-b2c1-d3f0-eafd-5b87bc060291",
        "typeFullFqn": "tenant.avantec_widgets.styled_button_of_string_value"
      },
      "876cf27d-f207-6ec6-8529-9bf5d950070a": {
        "type": "rpc",
        "sizeX": 3,
        "sizeY": 1,
        "config": {
          "showTitle": false,
          "backgroundColor": "#ffffff",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px 10px",
          "settings": {
            "retrieveMethod": "none",
            "updateMethod": "rpc",
            "updateRPCMethod": "remoteClearWiFiConfig",
            "requestTimeout": 5000,
            "buttonState": {
              "on": {
                "value": "true",
                "label": "Clear Wi-Fi Config",
                "isRaised": true,
                "isPrimary": true
              },
              "off": {
                "value": "false",
                "label": "Clear Wi-Fi Configuration",
                "isRaised": true,
                "isPrimary": false,
                "bgColor": "#e6e7e8",
                "textColor": "#ef2b22"
              }
            },
            "convertValueFunction": "return {};"
          },
          "title": "Clear device's Wi-Fi configuration",
          "showTitleIcon": false,
          "titleIcon": null,
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "dropShadow": false,
          "enableFullscreen": false,
          "widgetStyle": {},
          "titleStyle": {
            "fontSize": "14px",
            "fontWeight": 400
          },
          "useDashboardTimewindow": true,
          "displayTimewindow": true,
          "showLegend": false,
          "actions": {},
          "targetDeviceAliases": [],
          "datasources": [],
          "targetDeviceAliasIds": [
            "6241956e-9e96-794d-24e2-3cac159dc3ca"
          ],
          "enableDataExport": true,
          "widgetCss": "",
          "pageSize": 1024,
          "noDataDisplayMessage": ""
        },
        "id": "876cf27d-f207-6ec6-8529-9bf5d950070a",
        "typeFullFqn": "tenant.avantec_widgets.styled_button_of_string_value"
      },
      "e7a70b7f-9e8a-fdfe-589c-8f9bb80157b7": {
        "type": "static",
        "sizeX": 7.5,
        "sizeY": 3,
        "config": {
          "datasources": [],
          "timewindow": {
            "realtime": {
              "timewindowMs": 60000
            }
          },
          "showTitle": false,
          "backgroundColor": "rgb(255, 255, 255)",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "8px",
          "settings": {
            "cardHtml": "<div class='card'>\n    <div class='content' id=\"program\">\n        <div class='description' id=\"program\">\n            &lt; &nbsp; program\n        </div>\n    </div>\n</div>",
            "cardCss": ".card {\n   width: 100%;\n   height: 100%;\n   box-sizing: border-box;\n}\n\n.card .content {\n   padding: 5px;\n   display: flex;\n   flex-direction: column;\n   align-items: center;\n   justify-content: center;\n   height: 100%;\n   box-sizing: border-box;\n   transition: background-color 0.5s;\n}\n\n.card .content:hover {\n    background-color: #ddd;\n}\n\n.card .description {\n    font-size: 0.75em;\n    font-weight: normal;\n    line-height: 2;\n    color: #333333;\n    text-transform: uppercase;\n}\n"
          },
          "title": "Navigation:  Program",
          "dropShadow": false,
          "enableFullscreen": false,
          "enableDataExport": true,
          "widgetStyle": {
            "border": "1px solid #E0E0E0"
          },
          "widgetCss": "",
          "pageSize": 1024,
          "noDataDisplayMessage": "",
          "showLegend": false,
          "actions": {
            "elementClick": [
              {
                "name": "program",
                "icon": "more_horiz",
                "useShowWidgetActionFunction": null,
                "showWidgetActionFunction": "return true;",
                "type": "custom",
                "customFunction": "let stateIndex = widgetContext.stateController.getStateIndex();\nif (stateIndex > 0) {\n    stateIndex -= 1;\n    backToPrevState(stateIndex);\n}\n\nfunction backToPrevState(stateIndex) {\n    widgetContext.stateController.navigatePrevState(stateIndex);\n}\n\n/*openDashboardState('program');\n\nfunction openDashboardState(statedId) {\n    var currentState = widgetContext.stateController\n        .getStateId();\n    if (currentState !== statedId) {\n        var params = {};\n        widgetContext.stateController.updateState(statedId,\n            params, false);\n    }\n} */",
                "openInSeparateDialog": false,
                "openInPopover": false,
                "id": "b66d7505-c257-2b26-6275-88178ea0bac2"
              }
            ]
          }
        },
        "row": 0,
        "col": 0,
        "id": "e7a70b7f-9e8a-fdfe-589c-8f9bb80157b7",
        "typeFullFqn": "system.cards.html_card"
      },
      "0f287381-80c3-f4cb-6644-f48d280c484d": {
        "type": "static",
        "sizeX": 7.5,
        "sizeY": 3,
        "config": {
          "datasources": [],
          "timewindow": {
            "realtime": {
              "timewindowMs": 60000
            }
          },
          "showTitle": false,
          "backgroundColor": "#eeeeee",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px 10px",
          "settings": {
            "cardHtml": "<div class='card'></div>",
            "cardCss": ".card {\n    font-weight: bold;\n    font-size: 32px;\n    color: #999;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}"
          },
          "title": "New HTML Card",
          "dropShadow": false,
          "enableFullscreen": false,
          "enableDataExport": true,
          "widgetStyle": {},
          "widgetCss": "",
          "pageSize": 1024,
          "noDataDisplayMessage": "",
          "showLegend": false
        },
        "row": 0,
        "col": 0,
        "id": "0f287381-80c3-f4cb-6644-f48d280c484d",
        "typeFullFqn": "system.cards.html_card"
      },
      "07a76fbe-68b3-3e33-eeb3-cf9c364dd9cb": {
        "type": "rpc",
        "sizeX": 7,
        "sizeY": 2,
        "config": {
          "targetDeviceAliases": [],
          "showTitle": false,
          "backgroundColor": "#fff",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px 10px",
          "settings": {
            "stateParamsConvertFunc": "if (stateParams) {\n    if (stateParams.daysOfWeeksStr) {\n        return stateParams.daysOfWeeksStr;\n    }\n}\n\nreturn 'State param'; /* console.log(value); */"
          },
          "title": "New Simple state params card",
          "datasources": [],
          "targetDeviceAliasIds": [
            "6241956e-9e96-794d-24e2-3cac159dc3ca"
          ],
          "showTitleIcon": false,
          "titleTooltip": "",
          "dropShadow": false,
          "enableFullscreen": false,
          "enableDataExport": true,
          "widgetStyle": {},
          "widgetCss": "",
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "pageSize": 1024,
          "noDataDisplayMessage": "",
          "showLegend": false
        },
        "row": 0,
        "col": 0,
        "id": "07a76fbe-68b3-3e33-eeb3-cf9c364dd9cb",
        "typeFullFqn": "tenant.avantec_widgets.simple_state_param_card"
      },
      "928cf5a0-d67d-3448-0272-83180e2fc400": {
        "type": "rpc",
        "sizeX": 8,
        "sizeY": 2.5,
        "config": {
          "showTitle": false,
          "backgroundColor": "#ffffff",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px 10px",
          "settings": {
            "retrieveMethod": "attribute",
            "updateMethod": "rpc",
            "requestTimeout": 5000,
            "showResultMessage": false,
            "patternCommonParam": "00",
            "convertRetrievedValueFunction": "return value;",
            "convertUpdatedValueFunction": "return value;",
            "patternParamOfRetrieveAttributeKey": "prgSpTime",
            "convertRetrievedAttributeKeyOrMethodNameFunction": "//console.log(\"retrieve\", patternParamOfetrievedAttributeKeyOrMethodName + patternCommonParam);\n//return patternParamOfetrievedAttributeKeyOrMethodName + patternCommonParam; /* console.log(value); */\n\nlet snNumb = 0;\nif (patternCommonParam) {\n    snNumb = parseInt(patternCommonParam, 10);\n}\n\n//console.log(\"stateParams in Program-Setpoints\", stateParams);\n\nif (stateParams && stateParams.daysOfWeeks && stateParams\n    .daysOfWeeks >= 0 && stateParams.daysOfWeeks < 7) {\n    snNumb = snNumb + stateParams.daysOfWeeks * 4;\n}\n\nlet snStr = snNumb.toLocaleString('en-US', {\n    minimumIntegerDigits: 2,\n    useGrouping: false\n});\n\nlet attributeKeyOrMethodName = \"\";\nif (patternParamOfetrievedAttributeKeyOrMethodName) {\n    attributeKeyOrMethodName = patternParamOfetrievedAttributeKeyOrMethodName + snStr;\n} else {\n    attributeKeyOrMethodName = snStr;\n}\n\nreturn attributeKeyOrMethodName;\n\n",
            "patternParamOfUpdateRPCMethodName": "remoteSetPrgSpTime",
            "convertUpdatedAttributeKeyOrMethodNameFunction": "//console.log(\"update\", patternParamOfUpdateAttributeKeyOrMethodName + patternCommonParam);\n//return patternParamOfUpdateAttributeKeyOrMethodName + patternCommonParam; /* console.log(value); */\n\nlet snNumb = 0;\nif (patternCommonParam) {\n    snNumb = parseInt(patternCommonParam, 10);\n}\n\nif (stateParams && stateParams.daysOfWeeks && stateParams\n    .daysOfWeeks >= 0 && stateParams.daysOfWeeks < 7) {\n    snNumb = snNumb + stateParams.daysOfWeeks * 4;\n}\n\nlet snStr = snNumb.toLocaleString('en-US', {\n    minimumIntegerDigits: 2,\n    useGrouping: false\n});\n\nlet attributeKeyOrMethodName = \"\";\nif (patternParamOfUpdateAttributeKeyOrMethodName) {\n    attributeKeyOrMethodName = patternParamOfUpdateAttributeKeyOrMethodName + snStr;\n} else {\n    attributeKeyOrMethodName = snStr;\n}\n\nreturn attributeKeyOrMethodName;\n",
            "title": "Program 1"
          },
          "title": "Program 1",
          "showTitleIcon": false,
          "titleIcon": "more_horiz",
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "dropShadow": false,
          "enableFullscreen": false,
          "widgetStyle": {},
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "useDashboardTimewindow": true,
          "displayTimewindow": true,
          "showLegend": false,
          "actions": {},
          "targetDeviceAliases": [],
          "datasources": [],
          "targetDeviceAliasIds": [
            "6241956e-9e96-794d-24e2-3cac159dc3ca"
          ],
          "enableDataExport": true,
          "widgetCss": "",
          "pageSize": 1024,
          "noDataDisplayMessage": ""
        },
        "row": 0,
        "col": 0,
        "id": "928cf5a0-d67d-3448-0272-83180e2fc400",
        "typeFullFqn": "tenant.avantec_widgets.update_time_value_with_pattern_key"
      },
      "d8237ebd-68ea-84ae-1e46-24eae250da60": {
        "type": "rpc",
        "sizeX": 4,
        "sizeY": 2,
        "config": {
          "targetDeviceAliases": [],
          "showTitle": false,
          "backgroundColor": "#ffffff",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px 10px",
          "settings": {
            "requestTimeout": 500,
            "retrieveAttributes": {
              "adjusted": "adjust",
              "min": "spValueMin",
              "max": "spValueMax",
              "step": "spValueStep",
              "unit": "currentTempUnit",
              "retrievedAttributeKeyConvertFunc": "//return patternParamOfRetrievedAttributeKey + patternCommonParam; /* console.log(value); */\n\nlet snNumb = 0;\nif (patternCommonParam) {\n    snNumb = parseInt(patternCommonParam, 10);\n}\n\n//console.log(\"stateParams in Program-Setpoints\", stateParams);\n\nif (stateParams && stateParams.daysOfWeeks && stateParams\n    .daysOfWeeks >= 0 && stateParams.daysOfWeeks < 7) {\n    snNumb = snNumb + stateParams.daysOfWeeks * 4;\n}\n\nlet snStr = snNumb.toLocaleString('en-US', {\n    minimumIntegerDigits: 2,\n    useGrouping: false\n});\n\nlet keyStr = \"\";\nif (patternParamOfRetrievedAttributeKey) {\n    keyStr = patternParamOfRetrievedAttributeKey + snStr;\n} else {\n    keyStr = snStr;\n}\n\nreturn keyStr;",
              "patternParamOfRetrievedAttributeKey": "prgSpValue"
            },
            "updateMethod": "rpc",
            "convertValueFunction": "return value; /* console.log(value); */",
            "patternCommonParam": "0",
            "patternParamOfUpdateRPCMethodName": "remoteSetPrgSpValue",
            "updateRPCMethodConvertNameFunc": "//return patternParamOfUpdateRPCMethodName + patternCommonParam; /* console.log(value); */\n\nlet snNumb = 0;\nif (patternCommonParam) {\n    snNumb = parseInt(patternCommonParam, 10);\n}\n\nif (stateParams && stateParams.daysOfWeeks && stateParams\n    .daysOfWeeks >= 0 && stateParams.daysOfWeeks < 7) {\n    snNumb = snNumb + stateParams.daysOfWeeks * 4;\n}\n\nlet snStr = snNumb.toLocaleString('en-US', {\n    minimumIntegerDigits: 2,\n    useGrouping: false\n});\n\nlet methodName = \"\";\nif (patternParamOfUpdateRPCMethodName) {\n    methodName = patternParamOfUpdateRPCMethodName + snStr;\n} else {\n    methodName = snStr;\n}\n\nreturn methodName;"
          },
          "title": "",
          "datasources": [],
          "targetDeviceAliasIds": [
            "6241956e-9e96-794d-24e2-3cac159dc3ca"
          ],
          "showTitleIcon": false,
          "titleTooltip": "",
          "dropShadow": false,
          "enableFullscreen": false,
          "enableDataExport": true,
          "widgetStyle": {},
          "widgetCss": "",
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "pageSize": 1024,
          "noDataDisplayMessage": "",
          "showLegend": false,
          "decimals": 1
        },
        "row": 0,
        "col": 0,
        "id": "d8237ebd-68ea-84ae-1e46-24eae250da60",
        "typeFullFqn": "tenant.avantec_widgets.select_double_value_with_state_parameter_from_flexiable_option"
      },
      "0cf7239d-0fc1-64b6-5a1d-f993f3004805": {
        "type": "rpc",
        "sizeX": 8,
        "sizeY": 2.5,
        "config": {
          "showTitle": false,
          "backgroundColor": "#ffffff",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px 10px",
          "settings": {
            "retrieveMethod": "attribute",
            "updateMethod": "rpc",
            "requestTimeout": 5000,
            "showResultMessage": false,
            "patternCommonParam": "02",
            "convertRetrievedValueFunction": "return value;",
            "convertUpdatedValueFunction": "return value;",
            "patternParamOfRetrieveAttributeKey": "prgSpTime",
            "convertRetrievedAttributeKeyOrMethodNameFunction": "//console.log(\"retrieve\", patternParamOfetrievedAttributeKeyOrMethodName + patternCommonParam);\n//return patternParamOfetrievedAttributeKeyOrMethodName + patternCommonParam; /* console.log(value); */\n\nlet snNumb = 0;\nif (patternCommonParam) {\n    snNumb = parseInt(patternCommonParam, 10);\n}\n\n//console.log(\"stateParams in Program-Setpoints\", stateParams);\n\nif (stateParams && stateParams.daysOfWeeks && stateParams\n    .daysOfWeeks >= 0 && stateParams.daysOfWeeks < 7) {\n    snNumb = snNumb + stateParams.daysOfWeeks * 4;\n}\n\nlet snStr = snNumb.toLocaleString('en-US', {\n    minimumIntegerDigits: 2,\n    useGrouping: false\n});\n\nlet attributeKeyOrMethodName = \"\";\nif (patternParamOfetrievedAttributeKeyOrMethodName) {\n    attributeKeyOrMethodName = patternParamOfetrievedAttributeKeyOrMethodName + snStr;\n} else {\n    attributeKeyOrMethodName = snStr;\n}\n\nreturn attributeKeyOrMethodName;\n\n",
            "patternParamOfUpdateRPCMethodName": "remoteSetPrgSpTime",
            "convertUpdatedAttributeKeyOrMethodNameFunction": "//console.log(\"update\", patternParamOfUpdateAttributeKeyOrMethodName + patternCommonParam);\n//return patternParamOfUpdateAttributeKeyOrMethodName + patternCommonParam; /* console.log(value); */\n\nlet snNumb = 0;\nif (patternCommonParam) {\n    snNumb = parseInt(patternCommonParam, 10);\n}\n\nif (stateParams && stateParams.daysOfWeeks && stateParams\n    .daysOfWeeks >= 0 && stateParams.daysOfWeeks < 7) {\n    snNumb = snNumb + stateParams.daysOfWeeks * 4;\n}\n\nlet snStr = snNumb.toLocaleString('en-US', {\n    minimumIntegerDigits: 2,\n    useGrouping: false\n});\n\nlet attributeKeyOrMethodName = \"\";\nif (patternParamOfUpdateAttributeKeyOrMethodName) {\n    attributeKeyOrMethodName = patternParamOfUpdateAttributeKeyOrMethodName + snStr;\n} else {\n    attributeKeyOrMethodName = snStr;\n}\n\nreturn attributeKeyOrMethodName;\n",
            "title": "Program 3"
          },
          "title": "Program 3",
          "showTitleIcon": false,
          "titleIcon": "more_horiz",
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "dropShadow": false,
          "enableFullscreen": false,
          "widgetStyle": {},
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "useDashboardTimewindow": true,
          "displayTimewindow": true,
          "showLegend": false,
          "actions": {},
          "targetDeviceAliases": [],
          "datasources": [],
          "targetDeviceAliasIds": [
            "6241956e-9e96-794d-24e2-3cac159dc3ca"
          ],
          "enableDataExport": true,
          "widgetCss": "",
          "pageSize": 1024,
          "noDataDisplayMessage": ""
        },
        "row": 0,
        "col": 0,
        "id": "0cf7239d-0fc1-64b6-5a1d-f993f3004805",
        "typeFullFqn": "tenant.avantec_widgets.update_time_value_with_pattern_key"
      },
      "f53a6d1e-fb23-89a8-1d61-d805ee97510c": {
        "type": "rpc",
        "sizeX": 4,
        "sizeY": 2,
        "config": {
          "targetDeviceAliases": [],
          "showTitle": false,
          "backgroundColor": "#ffffff",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px 10px",
          "settings": {
            "requestTimeout": 500,
            "retrieveAttributes": {
              "adjusted": "adjust",
              "min": "spValueMin",
              "max": "spValueMax",
              "step": "spValueStep",
              "unit": "currentTempUnit",
              "retrievedAttributeKeyConvertFunc": "//return patternParamOfRetrievedAttributeKey + patternCommonParam; /* console.log(value); */\n\nlet snNumb = 0;\nif (patternCommonParam) {\n    snNumb = parseInt(patternCommonParam, 10);\n}\n\n//console.log(\"stateParams in Program-Setpoints\", stateParams);\n\nif (stateParams && stateParams.daysOfWeeks && stateParams\n    .daysOfWeeks >= 0 && stateParams.daysOfWeeks < 7) {\n    snNumb = snNumb + stateParams.daysOfWeeks * 4;\n}\n\nlet snStr = snNumb.toLocaleString('en-US', {\n    minimumIntegerDigits: 2,\n    useGrouping: false\n});\n\nlet keyStr = \"\";\nif (patternParamOfRetrievedAttributeKey) {\n    keyStr = patternParamOfRetrievedAttributeKey + snStr;\n} else {\n    keyStr = snStr;\n}\n\nreturn keyStr;",
              "patternParamOfRetrievedAttributeKey": "prgSpValue"
            },
            "updateMethod": "rpc",
            "convertValueFunction": "return value; /* console.log(value); */",
            "patternCommonParam": "2",
            "patternParamOfUpdateRPCMethodName": "remoteSetPrgSpValue",
            "updateRPCMethodConvertNameFunc": "//return patternParamOfUpdateRPCMethodName + patternCommonParam; /* console.log(value); */\n\nlet snNumb = 0;\nif (patternCommonParam) {\n    snNumb = parseInt(patternCommonParam, 10);\n}\n\nif (stateParams && stateParams.daysOfWeeks && stateParams\n    .daysOfWeeks >= 0 && stateParams.daysOfWeeks < 7) {\n    snNumb = snNumb + stateParams.daysOfWeeks * 4;\n}\n\nlet snStr = snNumb.toLocaleString('en-US', {\n    minimumIntegerDigits: 2,\n    useGrouping: false\n});\n\nlet methodName = \"\";\nif (patternParamOfUpdateRPCMethodName) {\n    methodName = patternParamOfUpdateRPCMethodName + snStr;\n} else {\n    methodName = snStr;\n}\n\nreturn methodName;"
          },
          "title": "",
          "datasources": [],
          "targetDeviceAliasIds": [
            "6241956e-9e96-794d-24e2-3cac159dc3ca"
          ],
          "showTitleIcon": false,
          "titleTooltip": "",
          "dropShadow": false,
          "enableFullscreen": false,
          "enableDataExport": true,
          "widgetStyle": {},
          "widgetCss": "",
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "pageSize": 1024,
          "noDataDisplayMessage": "",
          "showLegend": false,
          "decimals": 1
        },
        "row": 0,
        "col": 0,
        "id": "f53a6d1e-fb23-89a8-1d61-d805ee97510c",
        "typeFullFqn": "tenant.avantec_widgets.select_double_value_with_state_parameter_from_flexiable_option"
      },
      "5655869c-93c5-1b5a-c6ac-a97a860c6e50": {
        "type": "rpc",
        "sizeX": 8,
        "sizeY": 2.5,
        "config": {
          "showTitle": false,
          "backgroundColor": "#ffffff",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px 10px",
          "settings": {
            "retrieveMethod": "attribute",
            "updateMethod": "rpc",
            "requestTimeout": 5000,
            "showResultMessage": false,
            "patternCommonParam": "01",
            "convertRetrievedValueFunction": "return value;",
            "convertUpdatedValueFunction": "return value;",
            "patternParamOfRetrieveAttributeKey": "prgSpTime",
            "convertRetrievedAttributeKeyOrMethodNameFunction": "//console.log(\"retrieve\", patternParamOfetrievedAttributeKeyOrMethodName + patternCommonParam);\n//return patternParamOfetrievedAttributeKeyOrMethodName + patternCommonParam; /* console.log(value); */\n\nlet snNumb = 0;\nif (patternCommonParam) {\n    snNumb = parseInt(patternCommonParam, 10);\n}\n\n//console.log(\"stateParams in Program-Setpoints\", stateParams);\n\nif (stateParams && stateParams.daysOfWeeks && stateParams\n    .daysOfWeeks >= 0 && stateParams.daysOfWeeks < 7) {\n    snNumb = snNumb + stateParams.daysOfWeeks * 4;\n}\n\nlet snStr = snNumb.toLocaleString('en-US', {\n    minimumIntegerDigits: 2,\n    useGrouping: false\n});\n\nlet attributeKeyOrMethodName = \"\";\nif (patternParamOfetrievedAttributeKeyOrMethodName) {\n    attributeKeyOrMethodName = patternParamOfetrievedAttributeKeyOrMethodName + snStr;\n} else {\n    attributeKeyOrMethodName = snStr;\n}\n\nreturn attributeKeyOrMethodName;\n\n",
            "patternParamOfUpdateRPCMethodName": "remoteSetPrgSpTime",
            "convertUpdatedAttributeKeyOrMethodNameFunction": "//console.log(\"update\", patternParamOfUpdateAttributeKeyOrMethodName + patternCommonParam);\n//return patternParamOfUpdateAttributeKeyOrMethodName + patternCommonParam; /* console.log(value); */\n\nlet snNumb = 0;\nif (patternCommonParam) {\n    snNumb = parseInt(patternCommonParam, 10);\n}\n\nif (stateParams && stateParams.daysOfWeeks && stateParams\n    .daysOfWeeks >= 0 && stateParams.daysOfWeeks < 7) {\n    snNumb = snNumb + stateParams.daysOfWeeks * 4;\n}\n\nlet snStr = snNumb.toLocaleString('en-US', {\n    minimumIntegerDigits: 2,\n    useGrouping: false\n});\n\nlet attributeKeyOrMethodName = \"\";\nif (patternParamOfUpdateAttributeKeyOrMethodName) {\n    attributeKeyOrMethodName = patternParamOfUpdateAttributeKeyOrMethodName + snStr;\n} else {\n    attributeKeyOrMethodName = snStr;\n}\n\nreturn attributeKeyOrMethodName;\n",
            "title": "Program 2"
          },
          "title": "Program 1",
          "showTitleIcon": false,
          "titleIcon": "more_horiz",
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "dropShadow": false,
          "enableFullscreen": false,
          "widgetStyle": {},
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "useDashboardTimewindow": true,
          "displayTimewindow": true,
          "showLegend": false,
          "actions": {},
          "targetDeviceAliases": [],
          "datasources": [],
          "targetDeviceAliasIds": [
            "6241956e-9e96-794d-24e2-3cac159dc3ca"
          ],
          "enableDataExport": true,
          "widgetCss": "",
          "pageSize": 1024,
          "noDataDisplayMessage": ""
        },
        "row": 0,
        "col": 0,
        "id": "5655869c-93c5-1b5a-c6ac-a97a860c6e50",
        "typeFullFqn": "tenant.avantec_widgets.update_time_value_with_pattern_key"
      },
      "c875490e-7883-1f13-d40a-9f79e2b7fe50": {
        "type": "rpc",
        "sizeX": 4,
        "sizeY": 2,
        "config": {
          "targetDeviceAliases": [],
          "showTitle": false,
          "backgroundColor": "#ffffff",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px 10px",
          "settings": {
            "requestTimeout": 500,
            "retrieveAttributes": {
              "adjusted": "adjust",
              "min": "spValueMin",
              "max": "spValueMax",
              "step": "spValueStep",
              "unit": "currentTempUnit",
              "retrievedAttributeKeyConvertFunc": "//return patternParamOfRetrievedAttributeKey + patternCommonParam; /* console.log(value); */\n\nlet snNumb = 0;\nif (patternCommonParam) {\n    snNumb = parseInt(patternCommonParam, 10);\n}\n\n//console.log(\"stateParams in Program-Setpoints\", stateParams);\n\nif (stateParams && stateParams.daysOfWeeks && stateParams\n    .daysOfWeeks >= 0 && stateParams.daysOfWeeks < 7) {\n    snNumb = snNumb + stateParams.daysOfWeeks * 4;\n}\n\nlet snStr = snNumb.toLocaleString('en-US', {\n    minimumIntegerDigits: 2,\n    useGrouping: false\n});\n\nlet keyStr = \"\";\nif (patternParamOfRetrievedAttributeKey) {\n    keyStr = patternParamOfRetrievedAttributeKey + snStr;\n} else {\n    keyStr = snStr;\n}\n\nreturn keyStr;",
              "patternParamOfRetrievedAttributeKey": "prgSpValue"
            },
            "updateMethod": "rpc",
            "convertValueFunction": "return value; /* console.log(value); */",
            "patternCommonParam": "1",
            "patternParamOfUpdateRPCMethodName": "remoteSetPrgSpValue",
            "updateRPCMethodConvertNameFunc": "//return patternParamOfUpdateRPCMethodName + patternCommonParam; /* console.log(value); */\n\nlet snNumb = 0;\nif (patternCommonParam) {\n    snNumb = parseInt(patternCommonParam, 10);\n}\n\nif (stateParams && stateParams.daysOfWeeks && stateParams\n    .daysOfWeeks >= 0 && stateParams.daysOfWeeks < 7) {\n    snNumb = snNumb + stateParams.daysOfWeeks * 4;\n}\n\nlet snStr = snNumb.toLocaleString('en-US', {\n    minimumIntegerDigits: 2,\n    useGrouping: false\n});\n\nlet methodName = \"\";\nif (patternParamOfUpdateRPCMethodName) {\n    methodName = patternParamOfUpdateRPCMethodName + snStr;\n} else {\n    methodName = snStr;\n}\n\nreturn methodName;"
          },
          "title": "",
          "datasources": [],
          "targetDeviceAliasIds": [
            "6241956e-9e96-794d-24e2-3cac159dc3ca"
          ],
          "showTitleIcon": false,
          "titleTooltip": "",
          "dropShadow": false,
          "enableFullscreen": false,
          "enableDataExport": true,
          "widgetStyle": {},
          "widgetCss": "",
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "pageSize": 1024,
          "noDataDisplayMessage": "",
          "showLegend": false,
          "decimals": 1
        },
        "row": 0,
        "col": 0,
        "id": "c875490e-7883-1f13-d40a-9f79e2b7fe50",
        "typeFullFqn": "tenant.avantec_widgets.select_double_value_with_state_parameter_from_flexiable_option"
      },
      "3f2746ac-fa6e-4cf8-47d7-32ace4e63e18": {
        "type": "rpc",
        "sizeX": 8,
        "sizeY": 2.5,
        "config": {
          "showTitle": false,
          "backgroundColor": "#ffffff",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px 10px",
          "settings": {
            "retrieveMethod": "attribute",
            "updateMethod": "rpc",
            "requestTimeout": 5000,
            "showResultMessage": false,
            "patternCommonParam": "03",
            "convertRetrievedValueFunction": "return value;",
            "convertUpdatedValueFunction": "return value;",
            "patternParamOfRetrieveAttributeKey": "prgSpTime",
            "convertRetrievedAttributeKeyOrMethodNameFunction": "//console.log(\"retrieve\", patternParamOfetrievedAttributeKeyOrMethodName + patternCommonParam);\n//return patternParamOfetrievedAttributeKeyOrMethodName + patternCommonParam; /* console.log(value); */\n\nlet snNumb = 0;\nif (patternCommonParam) {\n    snNumb = parseInt(patternCommonParam, 10);\n}\n\n//console.log(\"stateParams in Program-Setpoints\", stateParams);\n\nif (stateParams && stateParams.daysOfWeeks && stateParams\n    .daysOfWeeks >= 0 && stateParams.daysOfWeeks < 7) {\n    snNumb = snNumb + stateParams.daysOfWeeks * 4;\n}\n\nlet snStr = snNumb.toLocaleString('en-US', {\n    minimumIntegerDigits: 2,\n    useGrouping: false\n});\n\nlet attributeKeyOrMethodName = \"\";\nif (patternParamOfetrievedAttributeKeyOrMethodName) {\n    attributeKeyOrMethodName = patternParamOfetrievedAttributeKeyOrMethodName + snStr;\n} else {\n    attributeKeyOrMethodName = snStr;\n}\n\nreturn attributeKeyOrMethodName;\n\n",
            "patternParamOfUpdateRPCMethodName": "remoteSetPrgSpTime",
            "convertUpdatedAttributeKeyOrMethodNameFunction": "//console.log(\"update\", patternParamOfUpdateAttributeKeyOrMethodName + patternCommonParam);\n//return patternParamOfUpdateAttributeKeyOrMethodName + patternCommonParam; /* console.log(value); */\n\nlet snNumb = 0;\nif (patternCommonParam) {\n    snNumb = parseInt(patternCommonParam, 10);\n}\n\nif (stateParams && stateParams.daysOfWeeks && stateParams\n    .daysOfWeeks >= 0 && stateParams.daysOfWeeks < 7) {\n    snNumb = snNumb + stateParams.daysOfWeeks * 4;\n}\n\nlet snStr = snNumb.toLocaleString('en-US', {\n    minimumIntegerDigits: 2,\n    useGrouping: false\n});\n\nlet attributeKeyOrMethodName = \"\";\nif (patternParamOfUpdateAttributeKeyOrMethodName) {\n    attributeKeyOrMethodName = patternParamOfUpdateAttributeKeyOrMethodName + snStr;\n} else {\n    attributeKeyOrMethodName = snStr;\n}\n\nreturn attributeKeyOrMethodName;\n",
            "title": "Program 4"
          },
          "title": "Program 4",
          "showTitleIcon": false,
          "titleIcon": "more_horiz",
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "dropShadow": false,
          "enableFullscreen": false,
          "widgetStyle": {},
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "useDashboardTimewindow": true,
          "displayTimewindow": true,
          "showLegend": false,
          "actions": {},
          "targetDeviceAliases": [],
          "datasources": [],
          "targetDeviceAliasIds": [
            "6241956e-9e96-794d-24e2-3cac159dc3ca"
          ],
          "enableDataExport": true,
          "widgetCss": "",
          "pageSize": 1024,
          "noDataDisplayMessage": ""
        },
        "row": 0,
        "col": 0,
        "id": "3f2746ac-fa6e-4cf8-47d7-32ace4e63e18",
        "typeFullFqn": "tenant.avantec_widgets.update_time_value_with_pattern_key"
      },
      "864b9011-ab87-69c9-2f5b-6e56de09ee48": {
        "type": "rpc",
        "sizeX": 4,
        "sizeY": 2,
        "config": {
          "targetDeviceAliases": [],
          "showTitle": false,
          "backgroundColor": "#ffffff",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px 10px",
          "settings": {
            "requestTimeout": 500,
            "retrieveAttributes": {
              "adjusted": "adjust",
              "min": "spValueMin",
              "max": "spValueMax",
              "step": "spValueStep",
              "unit": "currentTempUnit",
              "retrievedAttributeKeyConvertFunc": "//return patternParamOfRetrievedAttributeKey + patternCommonParam; /* console.log(value); */\n\nlet snNumb = 0;\nif (patternCommonParam) {\n    snNumb = parseInt(patternCommonParam, 10);\n}\n\n//console.log(\"stateParams in Program-Setpoints\", stateParams);\n\nif (stateParams && stateParams.daysOfWeeks && stateParams\n    .daysOfWeeks >= 0 && stateParams.daysOfWeeks < 7) {\n    snNumb = snNumb + stateParams.daysOfWeeks * 4;\n}\n\nlet snStr = snNumb.toLocaleString('en-US', {\n    minimumIntegerDigits: 2,\n    useGrouping: false\n});\n\nlet keyStr = \"\";\nif (patternParamOfRetrievedAttributeKey) {\n    keyStr = patternParamOfRetrievedAttributeKey + snStr;\n} else {\n    keyStr = snStr;\n}\n\nreturn keyStr;",
              "patternParamOfRetrievedAttributeKey": "prgSpValue"
            },
            "updateMethod": "rpc",
            "convertValueFunction": "return value; /* console.log(value); */",
            "patternCommonParam": "3",
            "patternParamOfUpdateRPCMethodName": "remoteSetPrgSpValue",
            "updateRPCMethodConvertNameFunc": "//return patternParamOfUpdateRPCMethodName + patternCommonParam; /* console.log(value); */\n\nlet snNumb = 0;\nif (patternCommonParam) {\n    snNumb = parseInt(patternCommonParam, 10);\n}\n\nif (stateParams && stateParams.daysOfWeeks && stateParams\n    .daysOfWeeks >= 0 && stateParams.daysOfWeeks < 7) {\n    snNumb = snNumb + stateParams.daysOfWeeks * 4;\n}\n\nlet snStr = snNumb.toLocaleString('en-US', {\n    minimumIntegerDigits: 2,\n    useGrouping: false\n});\n\nlet methodName = \"\";\nif (patternParamOfUpdateRPCMethodName) {\n    methodName = patternParamOfUpdateRPCMethodName + snStr;\n} else {\n    methodName = snStr;\n}\n\nreturn methodName;"
          },
          "title": "",
          "datasources": [],
          "targetDeviceAliasIds": [
            "6241956e-9e96-794d-24e2-3cac159dc3ca"
          ],
          "showTitleIcon": false,
          "titleTooltip": "",
          "dropShadow": false,
          "enableFullscreen": false,
          "enableDataExport": true,
          "widgetStyle": {},
          "widgetCss": "",
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "pageSize": 1024,
          "noDataDisplayMessage": "",
          "showLegend": false,
          "decimals": 1
        },
        "row": 0,
        "col": 0,
        "id": "864b9011-ab87-69c9-2f5b-6e56de09ee48",
        "typeFullFqn": "tenant.avantec_widgets.select_double_value_with_state_parameter_from_flexiable_option"
      },
      "937715ea-e563-8938-bd39-904e8b3c7496": {
        "type": "rpc",
        "sizeX": 4,
        "sizeY": 2,
        "config": {
          "showTitle": false,
          "backgroundColor": "#ffffff",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px 10px",
          "settings": {
            "optionStyle": {
              "orientation": "row",
              "isRaised": true,
              "checkedOption": {
                "isPrimary": true
              },
              "uncheckedOption": {
                "isPrimary": false,
                "bgColor": "#e6e7e8"
              }
            },
            "options": [
              {
                "optionLabel": "Internal",
                "attributeValue": "Internal"
              },
              {
                "optionLabel": "External",
                "attributeValue": "External"
              },
              {
                "optionLabel": "Combined",
                "attributeValue": "Combined"
              }
            ],
            "retrieveMethod": "attribute",
            "retrieveAttributeKey": "sensorMode",
            "parseValueFunction": "/* console.log(data); */\nreturn data;",
            "updateMethod": "rpc",
            "updateRPCMethod": "remoteSetSensorMode",
            "convertValueFunction": "/* console.log(value); */\nreturn value;",
            "requestTimeout": 5000,
            "title": "Sensor mode (Only 'Internal' will be used in 'Cool' mode!)"
          },
          "title": "",
          "showTitleIcon": false,
          "titleIcon": null,
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "dropShadow": false,
          "enableFullscreen": false,
          "widgetStyle": {},
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "useDashboardTimewindow": true,
          "displayTimewindow": true,
          "showLegend": false,
          "actions": {},
          "targetDeviceAliases": [],
          "datasources": [],
          "targetDeviceAliasIds": [
            "6241956e-9e96-794d-24e2-3cac159dc3ca"
          ],
          "enableDataExport": true,
          "widgetCss": "",
          "pageSize": 1024,
          "noDataDisplayMessage": ""
        },
        "id": "937715ea-e563-8938-bd39-904e8b3c7496",
        "typeFullFqn": "tenant.avantec_widgets.segmented_switch_from_string_attribute_send_rpc"
      },
      "406a125f-b689-62d5-7e2b-b105242f329d": {
        "type": "latest",
        "sizeX": 4,
        "sizeY": 3,
        "config": {
          "datasources": [
            {
              "type": "entity",
              "name": null,
              "entityAliasId": "6241956e-9e96-794d-24e2-3cac159dc3ca",
              "filterId": null,
              "dataKeys": [
                {
                  "name": "roomTemp",
                  "type": "timeseries",
                  "label": "Room temperature",
                  "color": "#009b4d",
                  "settings": {},
                  "_hash": 0.9937628442804367,
                  "units": null,
                  "decimals": 1,
                  "funcBody": null,
                  "usePostProcessing": null,
                  "postFuncBody": null
                }
              ]
            }
          ],
          "timewindow": {
            "displayValue": "",
            "selectedTab": 0,
            "realtime": {
              "realtimeType": 1,
              "interval": 1000,
              "timewindowMs": 60000,
              "quickInterval": "CURRENT_DAY"
            },
            "history": {
              "historyType": 0,
              "interval": 1000,
              "timewindowMs": 60000,
              "fixedTimewindow": {
                "startTimeMs": 1681702405191,
                "endTimeMs": 1681788805191
              },
              "quickInterval": "CURRENT_DAY"
            },
            "aggregation": {
              "type": "AVG",
              "limit": 25000
            }
          },
          "showTitle": true,
          "backgroundColor": "#ffffff",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px 10px",
          "settings": {
            "maxValue": 125,
            "minValue": 0,
            "donutStartAngle": 90,
            "showValue": true,
            "showMinMax": true,
            "levelColors": [],
            "titleFont": {
              "family": "Roboto",
              "size": 18,
              "style": "normal",
              "weight": "500",
              "color": "#999999"
            },
            "labelFont": {
              "family": "Roboto",
              "size": 8,
              "style": "normal",
              "weight": "500"
            },
            "valueFont": {
              "family": "Roboto",
              "style": "normal",
              "weight": "600",
              "size": 24,
              "color": "#333333"
            },
            "minMaxFont": {
              "family": "Roboto",
              "size": 8,
              "style": "normal",
              "weight": "500",
              "color": "#666666"
            },
            "neonGlowBrightness": 0,
            "dashThickness": 0,
            "gaugeColor": "#eeeeee",
            "showTitle": false,
            "gaugeType": "arc",
            "roundedLineCap": false,
            "showUnitTitle": false,
            "showTimestamp": false,
            "timestampFormat": "yyyy-MM-dd HH:mm:ss",
            "useFixedLevelColor": false,
            "showTicks": false,
            "animation": true,
            "animationDuration": 500,
            "animationRule": "linear",
            "tickWidth": 4,
            "colorTicks": "#666",
            "gaugeWidthScale": 0.65
          },
          "title": "Room temperature",
          "dropShadow": false,
          "enableFullscreen": false,
          "titleStyle": {
            "fontSize": "0.8em",
            "fontWeight": "normal",
            "opacity": 0.5
          },
          "showTitleIcon": false,
          "titleTooltip": "",
          "widgetStyle": {},
          "widgetCss": "",
          "noDataDisplayMessage": "",
          "showLegend": false,
          "legendConfig": {
            "direction": "column",
            "position": "bottom",
            "sortDataKeys": false,
            "showMin": false,
            "showMax": false,
            "showAvg": false,
            "showTotal": false
          },
          "enableDataExport": false,
          "pageSize": 1024
        },
        "row": 0,
        "col": 0,
        "id": "406a125f-b689-62d5-7e2b-b105242f329d",
        "typeFullFqn": "system.digital_gauges.gauge_justgage"
      },
      "97f822b9-ce08-b290-6639-af8449cf5a2f": {
        "type": "rpc",
        "sizeX": 9.5,
        "sizeY": 2,
        "config": {
          "targetDeviceAliases": [],
          "showTitle": false,
          "backgroundColor": "#EEEEEE",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px",
          "settings": {
            "buttonsSelected": 0
          },
          "title": "New Buttons navigation bar",
          "actions": {
            "elementClick": [
              {
                "name": "Monitor",
                "icon": "monitor_heart",
                "useShowWidgetActionFunction": null,
                "showWidgetActionFunction": "return true;",
                "type": "updateDashboardState",
                "targetDashboardStateId": "monitor",
                "setEntityId": true,
                "stateEntityParamName": null,
                "openRightLayout": false,
                "openInSeparateDialog": false,
                "openInPopover": false,
                "id": "e6bd9a5b-b2fa-233a-f7f7-271e9c742194"
              },
              {
                "name": "Control",
                "icon": "thermostat",
                "useShowWidgetActionFunction": null,
                "showWidgetActionFunction": "return true;",
                "type": "updateDashboardState",
                "targetDashboardStateId": "control",
                "setEntityId": true,
                "stateEntityParamName": null,
                "openRightLayout": false,
                "openInSeparateDialog": false,
                "openInPopover": false,
                "id": "2fc2648c-0071-5a04-437b-2a7ed2240a69"
              },
              {
                "name": "Program",
                "icon": "schedule",
                "useShowWidgetActionFunction": null,
                "showWidgetActionFunction": "return true;",
                "type": "updateDashboardState",
                "targetDashboardStateId": "program",
                "setEntityId": true,
                "stateEntityParamName": null,
                "openRightLayout": false,
                "openInSeparateDialog": false,
                "openInPopover": false,
                "id": "c7644acb-0f1e-18ab-edf0-71b0204c62e9"
              },
              {
                "name": "Settings",
                "icon": "settings",
                "useShowWidgetActionFunction": null,
                "showWidgetActionFunction": "return true;",
                "type": "updateDashboardState",
                "targetDashboardStateId": "settings",
                "setEntityId": true,
                "stateEntityParamName": null,
                "openRightLayout": false,
                "openInSeparateDialog": false,
                "openInPopover": false,
                "id": "d452a2bd-28a9-6d0a-34f8-2ebc8a0ff897"
              },
              {
                "name": "Admin",
                "icon": "admin_panel_settings",
                "useShowWidgetActionFunction": null,
                "showWidgetActionFunction": "return true;",
                "type": "updateDashboardState",
                "targetDashboardStateId": "admin",
                "setEntityId": true,
                "stateEntityParamName": null,
                "openRightLayout": false,
                "openInSeparateDialog": false,
                "openInPopover": false,
                "id": "b7728918-0f7b-1c9e-3a43-9a65623e94b9"
              }
            ]
          },
          "showTitleIcon": false,
          "titleTooltip": "",
          "dropShadow": false,
          "enableFullscreen": false,
          "enableDataExport": true,
          "widgetStyle": {},
          "widgetCss": "",
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "pageSize": 1024,
          "noDataDisplayMessage": "",
          "showLegend": false,
          "datasources": [],
          "targetDeviceAliasIds": [
            "6241956e-9e96-794d-24e2-3cac159dc3ca"
          ],
          "mobileOrder": 1,
          "mobileHeight": 1
        },
        "row": 0,
        "col": 0,
        "id": "97f822b9-ce08-b290-6639-af8449cf5a2f",
        "typeFullFqn": "tenant.avantec_widgets.buttons_navigation_bar"
      },
      "777be969-b26a-11d6-ee4f-faf5c0d7bcc8": {
        "type": "rpc",
        "sizeX": 9.5,
        "sizeY": 2,
        "config": {
          "targetDeviceAliases": [],
          "showTitle": false,
          "backgroundColor": "#EEEEEE",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px",
          "settings": {
            "buttonsSelected": 1
          },
          "title": "New Buttons navigation bar",
          "actions": {
            "elementClick": [
              {
                "name": "Monitor",
                "icon": "monitor_heart",
                "useShowWidgetActionFunction": null,
                "showWidgetActionFunction": "return true;",
                "type": "updateDashboardState",
                "targetDashboardStateId": "monitor",
                "setEntityId": true,
                "stateEntityParamName": null,
                "openRightLayout": false,
                "openInSeparateDialog": false,
                "openInPopover": false,
                "id": "e6bd9a5b-b2fa-233a-f7f7-271e9c742194"
              },
              {
                "name": "Control",
                "icon": "thermostat",
                "useShowWidgetActionFunction": null,
                "showWidgetActionFunction": "return true;",
                "type": "updateDashboardState",
                "targetDashboardStateId": "control",
                "setEntityId": true,
                "stateEntityParamName": null,
                "openRightLayout": false,
                "openInSeparateDialog": false,
                "openInPopover": false,
                "id": "2fc2648c-0071-5a04-437b-2a7ed2240a69"
              },
              {
                "name": "Program",
                "icon": "schedule",
                "useShowWidgetActionFunction": null,
                "showWidgetActionFunction": "return true;",
                "type": "updateDashboardState",
                "targetDashboardStateId": "program",
                "setEntityId": true,
                "stateEntityParamName": null,
                "openRightLayout": false,
                "openInSeparateDialog": false,
                "openInPopover": false,
                "id": "c7644acb-0f1e-18ab-edf0-71b0204c62e9"
              },
              {
                "name": "Settings",
                "icon": "settings",
                "useShowWidgetActionFunction": null,
                "showWidgetActionFunction": "return true;",
                "type": "updateDashboardState",
                "targetDashboardStateId": "settings",
                "setEntityId": true,
                "stateEntityParamName": null,
                "openRightLayout": false,
                "openInSeparateDialog": false,
                "openInPopover": false,
                "id": "d452a2bd-28a9-6d0a-34f8-2ebc8a0ff897"
              },
              {
                "name": "Admin",
                "icon": "admin_panel_settings",
                "useShowWidgetActionFunction": null,
                "showWidgetActionFunction": "return true;",
                "type": "updateDashboardState",
                "targetDashboardStateId": "admin",
                "setEntityId": true,
                "stateEntityParamName": null,
                "openRightLayout": false,
                "openInSeparateDialog": false,
                "openInPopover": false,
                "id": "b7728918-0f7b-1c9e-3a43-9a65623e94b9"
              }
            ]
          },
          "showTitleIcon": false,
          "titleTooltip": "",
          "dropShadow": false,
          "enableFullscreen": false,
          "enableDataExport": true,
          "widgetStyle": {},
          "widgetCss": "",
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "pageSize": 1024,
          "noDataDisplayMessage": "",
          "showLegend": false,
          "datasources": [],
          "targetDeviceAliasIds": [
            "6241956e-9e96-794d-24e2-3cac159dc3ca"
          ],
          "mobileOrder": 1,
          "mobileHeight": 1
        },
        "row": 0,
        "col": 0,
        "id": "777be969-b26a-11d6-ee4f-faf5c0d7bcc8",
        "typeFullFqn": "tenant.avantec_widgets.buttons_navigation_bar"
      },
      "c189c72f-6c09-4ff2-c626-02f967f1b79e": {
        "type": "rpc",
        "sizeX": 9.5,
        "sizeY": 2,
        "config": {
          "targetDeviceAliases": [],
          "showTitle": false,
          "backgroundColor": "#EEEEEE",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px",
          "settings": {
            "buttonsSelected": 2
          },
          "title": "New Buttons navigation bar",
          "actions": {
            "elementClick": [
              {
                "name": "Monitor",
                "icon": "monitor_heart",
                "useShowWidgetActionFunction": null,
                "showWidgetActionFunction": "return true;",
                "type": "updateDashboardState",
                "targetDashboardStateId": "monitor",
                "setEntityId": true,
                "stateEntityParamName": null,
                "openRightLayout": false,
                "openInSeparateDialog": false,
                "openInPopover": false,
                "id": "e6bd9a5b-b2fa-233a-f7f7-271e9c742194"
              },
              {
                "name": "Control",
                "icon": "thermostat",
                "useShowWidgetActionFunction": null,
                "showWidgetActionFunction": "return true;",
                "type": "updateDashboardState",
                "targetDashboardStateId": "control",
                "setEntityId": true,
                "stateEntityParamName": null,
                "openRightLayout": false,
                "openInSeparateDialog": false,
                "openInPopover": false,
                "id": "2fc2648c-0071-5a04-437b-2a7ed2240a69"
              },
              {
                "name": "Program",
                "icon": "schedule",
                "useShowWidgetActionFunction": null,
                "showWidgetActionFunction": "return true;",
                "type": "updateDashboardState",
                "targetDashboardStateId": "program",
                "setEntityId": true,
                "stateEntityParamName": null,
                "openRightLayout": false,
                "openInSeparateDialog": false,
                "openInPopover": false,
                "id": "c7644acb-0f1e-18ab-edf0-71b0204c62e9"
              },
              {
                "name": "Settings",
                "icon": "settings",
                "useShowWidgetActionFunction": null,
                "showWidgetActionFunction": "return true;",
                "type": "updateDashboardState",
                "targetDashboardStateId": "settings",
                "setEntityId": true,
                "stateEntityParamName": null,
                "openRightLayout": false,
                "openInSeparateDialog": false,
                "openInPopover": false,
                "id": "d452a2bd-28a9-6d0a-34f8-2ebc8a0ff897"
              },
              {
                "name": "Admin",
                "icon": "admin_panel_settings",
                "useShowWidgetActionFunction": null,
                "showWidgetActionFunction": "return true;",
                "type": "updateDashboardState",
                "targetDashboardStateId": "admin",
                "setEntityId": true,
                "stateEntityParamName": null,
                "openRightLayout": false,
                "openInSeparateDialog": false,
                "openInPopover": false,
                "id": "b7728918-0f7b-1c9e-3a43-9a65623e94b9"
              }
            ]
          },
          "showTitleIcon": false,
          "titleTooltip": "",
          "dropShadow": false,
          "enableFullscreen": false,
          "enableDataExport": true,
          "widgetStyle": {},
          "widgetCss": "",
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "pageSize": 1024,
          "noDataDisplayMessage": "",
          "showLegend": false,
          "datasources": [],
          "targetDeviceAliasIds": [
            "6241956e-9e96-794d-24e2-3cac159dc3ca"
          ],
          "mobileOrder": 1,
          "mobileHeight": 1
        },
        "row": 0,
        "col": 0,
        "id": "c189c72f-6c09-4ff2-c626-02f967f1b79e",
        "typeFullFqn": "tenant.avantec_widgets.buttons_navigation_bar"
      },
      "0799574b-9f6b-85f4-3b91-4910ec909853": {
        "type": "rpc",
        "sizeX": 9.5,
        "sizeY": 2,
        "config": {
          "targetDeviceAliases": [],
          "showTitle": false,
          "backgroundColor": "#EEEEEE",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px",
          "settings": {
            "buttonsSelected": 3
          },
          "title": "New Buttons navigation bar",
          "actions": {
            "elementClick": [
              {
                "name": "Monitor",
                "icon": "monitor_heart",
                "useShowWidgetActionFunction": null,
                "showWidgetActionFunction": "return true;",
                "type": "updateDashboardState",
                "targetDashboardStateId": "monitor",
                "setEntityId": true,
                "stateEntityParamName": null,
                "openRightLayout": false,
                "openInSeparateDialog": false,
                "openInPopover": false,
                "id": "e6bd9a5b-b2fa-233a-f7f7-271e9c742194"
              },
              {
                "name": "Control",
                "icon": "thermostat",
                "useShowWidgetActionFunction": null,
                "showWidgetActionFunction": "return true;",
                "type": "updateDashboardState",
                "targetDashboardStateId": "control",
                "setEntityId": true,
                "stateEntityParamName": null,
                "openRightLayout": false,
                "openInSeparateDialog": false,
                "openInPopover": false,
                "id": "2fc2648c-0071-5a04-437b-2a7ed2240a69"
              },
              {
                "name": "Program",
                "icon": "schedule",
                "useShowWidgetActionFunction": null,
                "showWidgetActionFunction": "return true;",
                "type": "updateDashboardState",
                "targetDashboardStateId": "program",
                "setEntityId": true,
                "stateEntityParamName": null,
                "openRightLayout": false,
                "openInSeparateDialog": false,
                "openInPopover": false,
                "id": "c7644acb-0f1e-18ab-edf0-71b0204c62e9"
              },
              {
                "name": "Settings",
                "icon": "settings",
                "useShowWidgetActionFunction": null,
                "showWidgetActionFunction": "return true;",
                "type": "updateDashboardState",
                "targetDashboardStateId": "settings",
                "setEntityId": true,
                "stateEntityParamName": null,
                "openRightLayout": false,
                "openInSeparateDialog": false,
                "openInPopover": false,
                "id": "d452a2bd-28a9-6d0a-34f8-2ebc8a0ff897"
              },
              {
                "name": "Admin",
                "icon": "admin_panel_settings",
                "useShowWidgetActionFunction": null,
                "showWidgetActionFunction": "return true;",
                "type": "updateDashboardState",
                "targetDashboardStateId": "admin",
                "setEntityId": true,
                "stateEntityParamName": null,
                "openRightLayout": false,
                "openInSeparateDialog": false,
                "openInPopover": false,
                "id": "b7728918-0f7b-1c9e-3a43-9a65623e94b9"
              }
            ]
          },
          "showTitleIcon": false,
          "titleTooltip": "",
          "dropShadow": false,
          "enableFullscreen": false,
          "enableDataExport": true,
          "widgetStyle": {},
          "widgetCss": "",
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "pageSize": 1024,
          "noDataDisplayMessage": "",
          "showLegend": false,
          "datasources": [],
          "targetDeviceAliasIds": [
            "6241956e-9e96-794d-24e2-3cac159dc3ca"
          ],
          "mobileOrder": 1,
          "mobileHeight": 1
        },
        "row": 0,
        "col": 0,
        "id": "0799574b-9f6b-85f4-3b91-4910ec909853",
        "typeFullFqn": "tenant.avantec_widgets.buttons_navigation_bar"
      },
      "0c457b32-5326-4578-ba34-b8855b680ecc": {
        "type": "rpc",
        "sizeX": 9.5,
        "sizeY": 2,
        "config": {
          "targetDeviceAliases": [],
          "showTitle": false,
          "backgroundColor": "#EEEEEE",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px",
          "settings": {
            "buttonsSelected": 4
          },
          "title": "New Buttons navigation bar",
          "actions": {
            "elementClick": [
              {
                "name": "Monitor",
                "icon": "monitor_heart",
                "useShowWidgetActionFunction": null,
                "showWidgetActionFunction": "return true;",
                "type": "updateDashboardState",
                "targetDashboardStateId": "monitor",
                "setEntityId": true,
                "stateEntityParamName": null,
                "openRightLayout": false,
                "openInSeparateDialog": false,
                "openInPopover": false,
                "id": "e6bd9a5b-b2fa-233a-f7f7-271e9c742194"
              },
              {
                "name": "Control",
                "icon": "thermostat",
                "useShowWidgetActionFunction": null,
                "showWidgetActionFunction": "return true;",
                "type": "updateDashboardState",
                "targetDashboardStateId": "control",
                "setEntityId": true,
                "stateEntityParamName": null,
                "openRightLayout": false,
                "openInSeparateDialog": false,
                "openInPopover": false,
                "id": "2fc2648c-0071-5a04-437b-2a7ed2240a69"
              },
              {
                "name": "Program",
                "icon": "schedule",
                "useShowWidgetActionFunction": null,
                "showWidgetActionFunction": "return true;",
                "type": "updateDashboardState",
                "targetDashboardStateId": "program",
                "setEntityId": true,
                "stateEntityParamName": null,
                "openRightLayout": false,
                "openInSeparateDialog": false,
                "openInPopover": false,
                "id": "c7644acb-0f1e-18ab-edf0-71b0204c62e9"
              },
              {
                "name": "Settings",
                "icon": "settings",
                "useShowWidgetActionFunction": null,
                "showWidgetActionFunction": "return true;",
                "type": "updateDashboardState",
                "targetDashboardStateId": "settings",
                "setEntityId": true,
                "stateEntityParamName": null,
                "openRightLayout": false,
                "openInSeparateDialog": false,
                "openInPopover": false,
                "id": "d452a2bd-28a9-6d0a-34f8-2ebc8a0ff897"
              },
              {
                "name": "Admin",
                "icon": "admin_panel_settings",
                "useShowWidgetActionFunction": null,
                "showWidgetActionFunction": "return true;",
                "type": "updateDashboardState",
                "targetDashboardStateId": "admin",
                "setEntityId": true,
                "stateEntityParamName": null,
                "openRightLayout": false,
                "openInSeparateDialog": false,
                "openInPopover": false,
                "id": "b7728918-0f7b-1c9e-3a43-9a65623e94b9"
              }
            ]
          },
          "showTitleIcon": false,
          "titleTooltip": "",
          "dropShadow": false,
          "enableFullscreen": false,
          "enableDataExport": true,
          "widgetStyle": {},
          "widgetCss": "",
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "pageSize": 1024,
          "noDataDisplayMessage": "",
          "showLegend": false,
          "datasources": [],
          "targetDeviceAliasIds": [
            "6241956e-9e96-794d-24e2-3cac159dc3ca"
          ],
          "mobileOrder": 1,
          "mobileHeight": 1
        },
        "row": 0,
        "col": 0,
        "id": "0c457b32-5326-4578-ba34-b8855b680ecc",
        "typeFullFqn": "tenant.avantec_widgets.buttons_navigation_bar"
      },
      "54713126-de2f-2193-9d93-69c0d47ae5bb": {
        "type": "latest",
        "sizeX": 7.5,
        "sizeY": 3,
        "config": {
          "datasources": [
            {
              "type": "entity",
              "name": null,
              "entityAliasId": "6241956e-9e96-794d-24e2-3cac159dc3ca",
              "filterId": null,
              "dataKeys": [
                {
                  "name": "tempUnit",
                  "type": "attribute",
                  "label": "tempUnit",
                  "color": "#4caf50",
                  "settings": {},
                  "_hash": 0.9299557253984947,
                  "units": null,
                  "decimals": null,
                  "funcBody": null,
                  "usePostProcessing": null,
                  "postFuncBody": null,
                  "aggregationType": null
                }
              ],
              "alarmFilterConfig": {
                "statusList": [
                  "ACTIVE"
                ]
              }
            }
          ],
          "timewindow": {
            "displayValue": "",
            "selectedTab": 0,
            "realtime": {
              "realtimeType": 1,
              "interval": 1000,
              "timewindowMs": 60000,
              "quickInterval": "CURRENT_DAY"
            },
            "history": {
              "historyType": 0,
              "interval": 1000,
              "timewindowMs": 60000,
              "fixedTimewindow": {
                "startTimeMs": 1681702405191,
                "endTimeMs": 1681788805191
              },
              "quickInterval": "CURRENT_DAY"
            },
            "aggregation": {
              "type": "AVG",
              "limit": 25000
            }
          },
          "showTitle": false,
          "backgroundColor": "#fff",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px",
          "settings": {
            "cardHtml": "<div class='card'>\n    <div class='content'> \n        <div class='description'>\n            Temperature unit\n        </div>\n        <div class='value'>\n            ${tempUnit}\n        </div>\n    </div>\n</div>",
            "cardCss": ".card {\n   width: 100%;\n   height: 100%;\n   border: 0px solid #E0E0E0;\n   box-sizing: border-box;\n}\n\n.card .content {\n   padding: 22px 10px;\n   display: flex;\n   flex-direction: column;\n   justify-content: center;\n   height: 100%;\n   box-sizing: border-box;\n}\n\n.card .value {\n    font-size: 1.5em;\n    font-weight: bold;\n    line-height: 1.5;\n    color: #333333;\n    text-align: center;\n}\n\n.card .description {\n    font-size: 0.8em;\n    font-weight: normal;\n    line-height: 1.5;\n    color: #333333;\n    text-align: left;\n    opacity: 0.5;\n}\n\n@media (min-width: 960px) and (max-width: 1200px) {\n    .card .value {\n        font-size: 1.2em;\n        line-height: 1;\n    }\n    \n    .card .description {\n        font-size: 0.8em;\n        line-height: 1;\n    }\n}"
          },
          "title": "New HTML Value Card",
          "dropShadow": false,
          "enableFullscreen": false,
          "widgetStyle": {},
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "useDashboardTimewindow": true,
          "showLegend": false,
          "actions": {},
          "enableDataExport": false,
          "widgetCss": "",
          "pageSize": 1024,
          "decimals": 1,
          "noDataDisplayMessage": "",
          "mobileOrder": 10,
          "displayTimewindow": true
        },
        "row": 0,
        "col": 0,
        "id": "54713126-de2f-2193-9d93-69c0d47ae5bb",
        "typeFullFqn": "system.cards.html_value_card"
      }
    },
    "states": {
      "monitor": {
        "name": "${entityLabel} - Monitor",
        "root": true,
        "layouts": {
          "main": {
            "widgets": {
              "ac6a1422-a81a-4fee-a588-7b8e3feda150": {
                "sizeX": 15,
                "sizeY": 1,
                "mobileOrder": 20,
                "mobileHeight": 1,
                "row": 1,
                "col": 0
              },
              "a3c73fe0-0b1b-2dc0-2716-53d8f3bd4bb6": {
                "sizeX": 9,
                "sizeY": 2,
                "mobileOrder": 11,
                "mobileHeight": 1,
                "mobileHide": false,
                "row": 2,
                "col": 6
              },
              "e16ab7bf-954e-cda5-e675-2a3c93804472": {
                "sizeX": 9,
                "sizeY": 2,
                "mobileOrder": 12,
                "mobileHeight": 1,
                "row": 4,
                "col": 6
              },
              "1304b52c-4b5a-5e57-64a2-c0729e5af698": {
                "sizeX": 15,
                "sizeY": 5,
                "mobileOrder": 14,
                "mobileHeight": 4,
                "row": 6,
                "col": 0
              },
              "406a125f-b689-62d5-7e2b-b105242f329d": {
                "sizeX": 6,
                "sizeY": 4,
                "mobileOrder": 10,
                "mobileHeight": 3,
                "row": 2,
                "col": 0
              },
              "97f822b9-ce08-b290-6639-af8449cf5a2f": {
                "sizeX": 15,
                "sizeY": 1,
                "mobileOrder": 1,
                "mobileHeight": 1,
                "row": 0,
                "col": 0
              }
            },
            "gridSettings": {
              "backgroundColor": "#eeeeee",
              "columns": 24,
              "margin": 10,
              "backgroundSizeMode": "100%",
              "outerMargin": true
            }
          }
        }
      },
      "admin": {
        "name": "${entityLabel} - Admin",
        "root": false,
        "layouts": {
          "main": {
            "widgets": {
              "c4f50849-7d55-3814-4a1b-8a2cb00718b8": {
                "sizeX": 7,
                "sizeY": 1,
                "mobileOrder": 14,
                "mobileHeight": 1,
                "row": 1,
                "col": 0
              },
              "3bdcede1-824b-b66e-16d1-3c55742852e6": {
                "sizeX": 4,
                "sizeY": 1,
                "mobileOrder": 9,
                "mobileHeight": 1,
                "row": 1,
                "col": 7
              },
              "d143d653-799f-3cb5-011a-a729359d12e0": {
                "sizeX": 3,
                "sizeY": 1,
                "mobileOrder": 22,
                "mobileHeight": 1,
                "row": 1,
                "col": 12
              },
              "a22c3e75-7a27-c3cb-6223-7af483e09329": {
                "sizeX": 6,
                "sizeY": 2,
                "mobileOrder": 10,
                "mobileHeight": 1,
                "row": 2,
                "col": 0
              },
              "4255b0cd-050c-d631-f877-106ec2a927fe": {
                "sizeX": 6,
                "sizeY": 2,
                "mobileOrder": 11,
                "mobileHeight": 1,
                "row": 4,
                "col": 0
              },
              "ed5533b1-b6b2-9b3b-1859-d7bb2c533501": {
                "sizeX": 6,
                "sizeY": 2,
                "mobileOrder": 12,
                "mobileHeight": 1,
                "row": 6,
                "col": 0
              },
              "67d15d7d-7d35-783a-d892-c1dfde4ce898": {
                "sizeX": 6,
                "sizeY": 2,
                "mobileOrder": 13,
                "mobileHeight": 1,
                "row": 8,
                "col": 0
              },
              "2f8acba3-a1b4-2196-3c1f-91ea4efc6058": {
                "sizeX": 8,
                "sizeY": 4,
                "mobileOrder": 5,
                "mobileHeight": 3,
                "row": 2,
                "col": 7
              },
              "96be3476-b2c1-d3f0-eafd-5b87bc060291": {
                "sizeX": 8,
                "sizeY": 2,
                "mobileOrder": 20,
                "mobileHeight": 1,
                "row": 6,
                "col": 7
              },
              "876cf27d-f207-6ec6-8529-9bf5d950070a": {
                "sizeX": 8,
                "sizeY": 2,
                "mobileOrder": 21,
                "mobileHeight": 1,
                "row": 8,
                "col": 7
              },
              "0c457b32-5326-4578-ba34-b8855b680ecc": {
                "sizeX": 15,
                "sizeY": 1,
                "mobileOrder": 1,
                "mobileHeight": 1,
                "row": 0,
                "col": 0,
                "mobileHide": true
              }
            },
            "gridSettings": {
              "backgroundColor": "#eeeeee",
              "columns": 24,
              "margin": 10,
              "backgroundSizeMode": "100%",
              "outerMargin": true
            }
          }
        }
      },
      "control": {
        "name": "${entityLabel} - Control",
        "root": false,
        "layouts": {
          "main": {
            "widgets": {
              "3a6cf13a-39c1-074b-6588-31236eadf24b": {
                "sizeX": 7,
                "sizeY": 1,
                "mobileOrder": 13,
                "mobileHeight": 1,
                "row": 1,
                "col": 0
              },
              "01cf776d-c69f-a819-ff77-578f7be89090": {
                "sizeX": 7,
                "sizeY": 1,
                "mobileOrder": 41,
                "mobileHeight": 1,
                "row": 1,
                "col": 8
              },
              "c085c3c7-53cf-794e-6fc8-70733c389f58": {
                "sizeX": 7,
                "sizeY": 2,
                "mobileOrder": 10,
                "mobileHeight": 1,
                "row": 2,
                "col": 0
              },
              "c13e1ad8-91b7-6860-9a7c-91bbbe98290e": {
                "sizeX": 7,
                "sizeY": 2,
                "mobileOrder": 11,
                "mobileHeight": 1,
                "row": 2,
                "col": 8
              },
              "976d0c06-2471-e8fd-e296-1b6cb00a945e": {
                "sizeX": 7,
                "sizeY": 2,
                "mobileOrder": 12,
                "mobileHeight": 1,
                "row": 5,
                "col": 0
              },
              "1eb0637f-df3e-3fa0-44fb-7b3c78797e98": {
                "sizeX": 7,
                "sizeY": 2,
                "mobileOrder": 30,
                "mobileHeight": 1,
                "row": 5,
                "col": 8
              },
              "23f882ee-4efd-ec19-7ca6-d777509c5216": {
                "sizeX": 7,
                "sizeY": 1,
                "mobileOrder": 42,
                "mobileHeight": 1,
                "row": 4,
                "col": 8
              },
              "777be969-b26a-11d6-ee4f-faf5c0d7bcc8": {
                "sizeX": 15,
                "sizeY": 1,
                "mobileOrder": 1,
                "mobileHeight": 1,
                "row": 0,
                "col": 0,
                "mobileHide": true
              }
            },
            "gridSettings": {
              "backgroundColor": "#eeeeee",
              "columns": 24,
              "margin": 10,
              "backgroundSizeMode": "100%",
              "outerMargin": true
            }
          }
        }
      },
      "program": {
        "name": "${entityLabel} - Program",
        "root": false,
        "layouts": {
          "main": {
            "widgets": {
              "886213c5-225a-a251-56c5-7ed2699e08b4": {
                "sizeX": 15,
                "sizeY": 1,
                "mobileOrder": 22,
                "mobileHeight": 1,
                "row": 1,
                "col": 0
              },
              "3b7d4b64-80ae-22b5-00dc-daede00e9c85": {
                "sizeX": 15,
                "sizeY": 2,
                "mobileOrder": 5,
                "mobileHeight": 1,
                "row": 2,
                "col": 0
              },
              "16bd211e-0594-c232-8f1a-5dca46ec1877": {
                "sizeX": 15,
                "sizeY": 7,
                "mobileOrder": 10,
                "mobileHeight": 5,
                "row": 4,
                "col": 0
              },
              "c189c72f-6c09-4ff2-c626-02f967f1b79e": {
                "sizeX": 15,
                "sizeY": 1,
                "mobileOrder": 1,
                "mobileHeight": 1,
                "row": 0,
                "col": 0,
                "mobileHide": true
              }
            },
            "gridSettings": {
              "backgroundColor": "#eeeeee",
              "columns": 24,
              "margin": 10,
              "backgroundSizeMode": "100%",
              "outerMargin": true
            }
          }
        }
      },
      "program_setpoints": {
        "name": "${entityLabel} - Program Setpoints",
        "root": false,
        "layouts": {
          "main": {
            "widgets": {
              "e7a70b7f-9e8a-fdfe-589c-8f9bb80157b7": {
                "sizeX": 15,
                "sizeY": 1,
                "mobileHide": true,
                "row": 0,
                "col": 0
              },
              "0f287381-80c3-f4cb-6644-f48d280c484d": {
                "sizeX": 15,
                "sizeY": 1,
                "mobileOrder": 200,
                "mobileHeight": 1,
                "row": 1,
                "col": 0
              },
              "07a76fbe-68b3-3e33-eeb3-cf9c364dd9cb": {
                "sizeX": 15,
                "sizeY": 1,
                "mobileOrder": 2,
                "row": 2,
                "col": 0
              },
              "928cf5a0-d67d-3448-0272-83180e2fc400": {
                "sizeX": 4,
                "sizeY": 2,
                "mobileOrder": 11,
                "mobileHeight": 1,
                "row": 3,
                "col": 0
              },
              "d8237ebd-68ea-84ae-1e46-24eae250da60": {
                "sizeX": 3,
                "sizeY": 2,
                "mobileOrder": 12,
                "mobileHeight": 1,
                "row": 3,
                "col": 4
              },
              "0cf7239d-0fc1-64b6-5a1d-f993f3004805": {
                "sizeX": 4,
                "sizeY": 2,
                "mobileOrder": 31,
                "mobileHeight": 1,
                "mobileHide": false,
                "row": 3,
                "col": 8
              },
              "f53a6d1e-fb23-89a8-1d61-d805ee97510c": {
                "sizeX": 3,
                "sizeY": 2,
                "mobileOrder": 32,
                "mobileHeight": 1,
                "row": 3,
                "col": 12
              },
              "5655869c-93c5-1b5a-c6ac-a97a860c6e50": {
                "sizeX": 4,
                "sizeY": 2,
                "mobileOrder": 21,
                "mobileHeight": 1,
                "row": 6,
                "col": 0
              },
              "c875490e-7883-1f13-d40a-9f79e2b7fe50": {
                "sizeX": 3,
                "sizeY": 2,
                "mobileOrder": 22,
                "mobileHeight": 1,
                "row": 6,
                "col": 4
              },
              "3f2746ac-fa6e-4cf8-47d7-32ace4e63e18": {
                "sizeX": 4,
                "sizeY": 2,
                "mobileOrder": 41,
                "mobileHeight": 1,
                "row": 6,
                "col": 8
              },
              "864b9011-ab87-69c9-2f5b-6e56de09ee48": {
                "sizeX": 3,
                "sizeY": 2,
                "mobileOrder": 42,
                "mobileHeight": 1,
                "row": 6,
                "col": 12
              }
            },
            "gridSettings": {
              "backgroundColor": "#eeeeee",
              "columns": 24,
              "margin": 10,
              "backgroundSizeMode": "100%",
              "outerMargin": true
            }
          }
        }
      },
      "settings": {
        "name": "${entityLabel} - Settings",
        "root": false,
        "layouts": {
          "main": {
            "widgets": {
              "1ab9c95c-7d2c-f4b2-0a37-432f19418528": {
                "sizeX": 7,
                "sizeY": 1,
                "mobileOrder": 23,
                "mobileHeight": 1,
                "row": 1,
                "col": 0
              },
              "b51d2eca-9e33-d629-763b-81272ae33f88": {
                "sizeX": 4,
                "sizeY": 1,
                "mobileOrder": 31,
                "mobileHeight": 1,
                "row": 1,
                "col": 8
              },
              "0cb7bd1f-3b20-7bb7-1a69-c54fc73369ba": {
                "sizeX": 3,
                "sizeY": 1,
                "mobileOrder": 37,
                "mobileHeight": 1,
                "row": 1,
                "col": 12
              },
              "0f141e75-343e-b186-09f3-ababd6c0dab5": {
                "sizeX": 4,
                "sizeY": 2,
                "mobileOrder": 10,
                "mobileHeight": 1,
                "mobileHide": true,
                "row": 2,
                "col": 15,
                "desktopHide": true
              },
              "81abae93-bb40-3db0-c535-eca663ff3841": {
                "sizeX": 7,
                "sizeY": 1,
                "mobileOrder": 11,
                "mobileHeight": 1,
                "row": 4,
                "col": 0
              },
              "3bacda62-c3a1-54a5-3dd9-02910254eb46": {
                "sizeX": 7,
                "sizeY": 2,
                "mobileOrder": 20,
                "mobileHeight": 1,
                "row": 5,
                "col": 0
              },
              "2ea49be4-8a77-189c-c714-035075079c6a": {
                "sizeX": 7,
                "sizeY": 2,
                "mobileOrder": 22,
                "mobileHeight": 1,
                "row": 9,
                "col": 0
              },
              "507bbc9a-edf7-f2f0-ecd8-ace41f538f4c": {
                "sizeX": 7,
                "sizeY": 2,
                "mobileOrder": 15,
                "mobileHeight": 1,
                "row": 2,
                "col": 8
              },
              "dee51c4b-1b3f-ddc4-ecfa-314eee6673bf": {
                "sizeX": 7,
                "sizeY": 1,
                "mobileOrder": 16,
                "mobileHeight": 1,
                "mobileHide": false,
                "row": 4,
                "col": 8
              },
              "74a60278-4324-5684-84d2-da926ad2be5c": {
                "sizeX": 7,
                "sizeY": 2,
                "mobileOrder": 30,
                "mobileHeight": 1,
                "row": 5,
                "col": 8
              },
              "b55b4f1e-ed7a-b803-f589-7dc46ca03a9f": {
                "sizeX": 7,
                "sizeY": 2,
                "mobileOrder": 35,
                "mobileHeight": 1,
                "row": 7,
                "col": 8
              },
              "388a863f-a615-714b-d9d2-7f7a2de81aa3": {
                "sizeX": 7,
                "sizeY": 2,
                "mobileOrder": 36,
                "mobileHeight": 1,
                "row": 9,
                "col": 8
              },
              "937715ea-e563-8938-bd39-904e8b3c7496": {
                "sizeX": 7,
                "sizeY": 2,
                "mobileOrder": 21,
                "mobileHeight": 1,
                "row": 7,
                "col": 0
              },
              "0799574b-9f6b-85f4-3b91-4910ec909853": {
                "sizeX": 15,
                "sizeY": 1,
                "mobileOrder": 1,
                "mobileHeight": 1,
                "row": 0,
                "col": 0,
                "mobileHide": true
              },
              "54713126-de2f-2193-9d93-69c0d47ae5bb": {
                "sizeX": 7,
                "sizeY": 2,
                "mobileOrder": 10,
                "mobileHeight": 1,
                "row": 2,
                "col": 0
              }
            },
            "gridSettings": {
              "backgroundColor": "#eeeeee",
              "columns": 24,
              "margin": 10,
              "backgroundSizeMode": "100%",
              "outerMargin": true
            }
          }
        }
      }
    },
    "entityAliases": {
      "6241956e-9e96-794d-24e2-3cac159dc3ca": {
        "id": "6241956e-9e96-794d-24e2-3cac159dc3ca",
        "alias": "Current TA652FH-W",
        "filter": {
          "type": "stateEntity",
          "resolveMultiple": false,
          "stateEntityParamName": null,
          "defaultStateEntity": null
        }
      }
    },
    "filters": {},
    "timewindow": {
      "hideInterval": false,
      "hideAggregation": false,
      "hideAggInterval": false,
      "hideTimezone": false,
      "selectedTab": 0,
      "realtime": {
        "realtimeType": 0,
        "timewindowMs": 604800000,
        "quickInterval": "CURRENT_DAY",
        "interval": 1800000
      },
      "aggregation": {
        "type": "AVG",
        "limit": 25000
      }
    },
    "settings": {
      "stateControllerId": "entity",
      "showTitle": false,
      "showDashboardsSelect": false,
      "showEntitiesSelect": false,
      "showDashboardTimewindow": false,
      "showDashboardExport": false,
      "toolbarAlwaysOpen": true,
      "titleColor": "rgba(0,0,0,0.870588)",
      "showDashboardLogo": false,
      "dashboardLogoUrl": null,
      "hideToolbar": false,
      "showFilters": false,
      "showUpdateDashboardImage": false,
      "dashboardCss": ""
    }
  },
  "externalId": null,
  "name": "TA652FH-W Thermostat (For Mobile App)"
}